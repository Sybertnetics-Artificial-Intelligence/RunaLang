Note: Single-file v0.2 compiler test using naming convention fixes
Note: This tests that v0.1 can call v0.2-style function names

Process called main returns Integer:
    Let source be "Let x be 42"

    Note: Test the naming convention that v0.2 expects
    Let tokens be Lexer_tokenize(source)
    Let ast be Parser_parse(tokens)
    Let typed_ast be TypeChecker_check(ast)
    Let assembly be CodeGen_generate(typed_ast)

    WriteFile assembly to "output.s"
    Return 0
End Process

Note: Mock v0.2-style wrapper functions
Process called Lexer_tokenize that takes source as String returns String:
    Return "mock_tokens_from_lexer"
End Process

Process called Parser_parse that takes tokens as String returns String:
    Return "mock_ast_from_parser"
End Process

Process called TypeChecker_check that takes ast as String returns String:
    Return string_concat("typed_", ast)
End Process

Process called CodeGen_generate that takes ast as String returns String:
    Let header be ".text\n.globl main\nmain:\n"
    Let body be "    mov $42, %rax\n    ret\n"
    Return string_concat(header, body)
End Process