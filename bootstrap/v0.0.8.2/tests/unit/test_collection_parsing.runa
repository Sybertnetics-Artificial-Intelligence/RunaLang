Note: Test collection literal parsing with all syntax variations
Note: Tests list, set, and dictionary literals

Process called "main" returns Integer:
    Note: Test 1: List literal with "a list containing"
    Let numbers be a list containing 1, 2, 3, 4, 5
    Display("PASS: List literal with 5 elements")

    Note: Test 2: List literal with single element
    Let single be a list containing 42
    Display("PASS: List literal with single element")

    Note: Test 3: List literal with "and" separator
    Let with_and be a list containing 10, 20, and 30
    Display("PASS: List literal with 'and' separator")

    Note: Test 4: Context-sensitive - list as variable name
    Let list be 100
    If list is equal to 100:
        Display("PASS: 'list' works as variable name")
    Otherwise:
        Display("FAIL: 'list' as variable name")
    End If

    Note: Test 5: Context-sensitive - dictionary as variable name
    Let dictionary be 200
    If dictionary is equal to 200:
        Display("PASS: 'dictionary' works as variable name")
    Otherwise:
        Display("FAIL: 'dictionary' as variable name")
    End If

    Note: Test 6: Context-sensitive - set as variable name
    Let set be 300
    If set is equal to 300:
        Display("PASS: 'set' works as variable name")
    Otherwise:
        Display("FAIL: 'set' as variable name")
    End If

    Note: Test 7: Nested expressions in list literal
    Let sum be 10 plus 5
    Let nested be a list containing sum, 20, 30
    Display("PASS: List literal with expression elements")

    Return 0
End Process
