Process called "main" takes argc as Integer, argv as Integer returns Integer:
    Print "Testing Bitwise Operations\n"

    # Test bit_and
    Print "\n=== Testing bit_and ==="
    Print "\n12 bit_and 10: "
    Print integer_to_string(12 bit_and 10)   # Should be 8 (1100 & 1010 = 1000)
    Print "\n15 bit_and 7: "
    Print integer_to_string(15 bit_and 7)    # Should be 7 (1111 & 0111 = 0111)

    # Test bit_or
    Print "\n\n=== Testing bit_or ==="
    Print "\n12 bit_or 10: "
    Print integer_to_string(12 bit_or 10)    # Should be 14 (1100 | 1010 = 1110)
    Print "\n5 bit_or 3: "
    Print integer_to_string(5 bit_or 3)      # Should be 7 (0101 | 0011 = 0111)

    # Test bit_xor
    Print "\n\n=== Testing bit_xor ==="
    Print "\n12 bit_xor 10: "
    Print integer_to_string(12 bit_xor 10)   # Should be 6 (1100 ^ 1010 = 0110)
    Print "\n15 bit_xor 7: "
    Print integer_to_string(15 bit_xor 7)    # Should be 8 (1111 ^ 0111 = 1000)

    # Test bit_shift_left
    Print "\n\n=== Testing bit_shift_left ==="
    Print "\n5 bit_shift_left by 2: "
    Print integer_to_string(5 bit_shift_left by 2)   # Should be 20 (101 << 2 = 10100)
    Print "\n3 bit_shift_left by 3: "
    Print integer_to_string(3 bit_shift_left by 3)   # Should be 24 (11 << 3 = 11000)

    # Test bit_shift_right
    Print "\n\n=== Testing bit_shift_right ==="
    Print "\n20 bit_shift_right by 2: "
    Print integer_to_string(20 bit_shift_right by 2) # Should be 5 (10100 >> 2 = 101)
    Print "\n24 bit_shift_right by 3: "
    Print integer_to_string(24 bit_shift_right by 3) # Should be 3 (11000 >> 3 = 11)

    # Test combined operations
    Print "\n\n=== Testing Combined Operations ==="
    Let val1 be 12
    Let val2 be 10
    Print "\nval1 = 12, val2 = 10"
    Print "\n(val1 bit_and val2) bit_or 5: "
    Print integer_to_string((val1 bit_and val2) bit_or 5) # Should be 13 (8 | 5 = 13)

    Print "\n\n=== All Bitwise Tests Complete ===\n"
    Return 0
End Process