Note: Test set literals and operations
Process called "main" returns Integer:
    Note: Test 1: Basic set literal with duplicates
    Let s1 be set containing 1, 2, 3, 2, 1
    Let size1 be set_size(s1)
    If size1 is not equal to 3:
        print_string("FAIL: set duplicate removal")
        Return 1
    End If

    Note: Test 2: "a set containing" syntax
    Let s2 be a set containing 10, 20, 30
    Let size2 be set_size(s2)
    If size2 is not equal to 3:
        print_string("FAIL: a set containing")
        Return 1
    End If

    Note: Test 3: set_contains
    Let has20 be set_contains(s2, 20)
    If has20 is not equal to 1:
        print_string("FAIL: set_contains true")
        Return 1
    End If

    Let has99 be set_contains(s2, 99)
    If has99 is not equal to 0:
        print_string("FAIL: set_contains false")
        Return 1
    End If

    Note: Test 4: set_add
    Let myset be set_create()
    set_add(myset, 5)
    set_add(myset, 10)
    set_add(myset, 5)
    Let added_size be set_size(myset)
    If added_size is not equal to 2:
        print_string("FAIL: set_add")
        Return 1
    End If

    Note: Test 5: set_remove
    set_remove(myset, 5)
    Let after_remove be set_size(myset)
    If after_remove is not equal to 1:
        print_string("FAIL: set_remove")
        Return 1
    End If

    Note: Test 6: set_union
    Let a be set containing 1, 2, 3
    Let b be set containing 3, 4, 5
    Let union be set_union(a, b)
    Let union_size be set_size(union)
    If union_size is not equal to 5:
        print_string("FAIL: set_union")
        Return 1
    End If

    Note: Test 7: set_intersection
    Let inter be set_intersection(a, b)
    Let inter_size be set_size(inter)
    If inter_size is not equal to 1:
        print_string("FAIL: set_intersection")
        Return 1
    End If

    Note: Test 8: Context-aware "set" as variable
    Let set be 42
    If set is not equal to 42:
        print_string("FAIL: set as variable")
        Return 1
    End If

    print_string("PASS: All set tests")
    Return 0
End Process
