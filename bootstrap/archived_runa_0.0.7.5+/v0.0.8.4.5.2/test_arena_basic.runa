Note: Test arena allocator basic functionality

Process called "main" takes dummy as Integer returns Integer:
    print_string("=== Testing Arena Allocator ===")
    
    Note: Create arena with 1KB initial size
    Let arena be arena_create(1024)
    If arena is equal to 0:
        print_string("[ERROR] Failed to create arena")
        Return 1
    End If
    print_string("[OK] Arena created")
    
    Note: Check initial capacity and usage
    Let capacity be arena_get_capacity(arena)
    Let used be arena_get_used(arena)
    print_string("Initial capacity: ")
    print_integer(capacity)
    print_string("Initial used: ")
    print_integer(used)
    
    Note: Allocate some memory
    Let ptr1 be arena_allocate(arena, 100)
    If ptr1 is equal to 0:
        print_string("[ERROR] Failed to allocate 100 bytes")
        arena_destroy(arena)
        Return 1
    End If
    print_string("[OK] Allocated 100 bytes")
    
    Note: Check usage after allocation
    Set used to arena_get_used(arena)
    print_string("Used after 100 bytes: ")
    print_integer(used)
    
    Note: Allocate more memory
    Let ptr2 be arena_allocate(arena, 256)
    If ptr2 is equal to 0:
        print_string("[ERROR] Failed to allocate 256 bytes")
        arena_destroy(arena)
        Return 1
    End If
    print_string("[OK] Allocated 256 bytes")
    
    Note: Check usage after second allocation
    Set used to arena_get_used(arena)
    print_string("Used after 256 more bytes: ")
    print_integer(used)
    
    Note: Test string duplication
    Let test_str be "Hello, Arena!"
    Let dup_str be arena_string_duplicate(arena, test_str)
    If dup_str is equal to 0:
        print_string("[ERROR] Failed to duplicate string")
        arena_destroy(arena)
        Return 1
    End If
    print_string("[OK] String duplicated: ")
    print_string(dup_str)
    
    Note: Check usage after string duplication
    Set used to arena_get_used(arena)
    print_string("Used after string duplication: ")
    print_integer(used)
    
    Note: Test arena reset
    arena_reset(arena)
    Set used to arena_get_used(arena)
    print_string("[OK] Arena reset, used now: ")
    print_integer(used)
    
    Note: Allocate after reset
    Let ptr3 be arena_allocate(arena, 50)
    If ptr3 is equal to 0:
        print_string("[ERROR] Failed to allocate after reset")
        arena_destroy(arena)
        Return 1
    End If
    print_string("[OK] Allocated 50 bytes after reset")
    
    Set used to arena_get_used(arena)
    print_string("Used after post-reset allocation: ")
    print_integer(used)
    
    Note: Test arena growth (allocate more than initial capacity)
    Let large_alloc be arena_allocate(arena, 2048)
    If large_alloc is equal to 0:
        print_string("[ERROR] Failed to allocate 2048 bytes (growth test)")
        arena_destroy(arena)
        Return 1
    End If
    print_string("[OK] Arena grew to accommodate 2048 bytes")
    
    Set capacity to arena_get_capacity(arena)
    Set used to arena_get_used(arena)
    print_string("Capacity after growth: ")
    print_integer(capacity)
    print_string("Used after growth: ")
    print_integer(used)
    
    Note: Destroy arena
    arena_destroy(arena)
    print_string("[OK] Arena destroyed")
    
    print_string("=== All Arena Tests Passed! ===")
    Return 0
End Process
