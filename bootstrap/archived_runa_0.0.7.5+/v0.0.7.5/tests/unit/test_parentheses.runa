# Test for CRITICAL FIX #4: Parentheses for expression grouping
# Tests complex math expressions with parentheses to control order of operations

Process called "main" takes argc as Integer, argv as Integer returns Integer:
    # Test 1: Basic parentheses - (2 + 3) * 4 = 20
    Let result1 be (2 plus 3) multiplied by 4
    If result1 is equal to 20:
        Display("PASS: Test 1 - basic grouping")
    Otherwise:
        Display("FAIL: Test 1 - basic grouping")
    End If

    # Test 2: Without parentheses - 2 + 3 * 4 = 14 (PEMDAS)
    Let result2 be 2 plus 3 multiplied by 4
    If result2 is equal to 14:
        Display("PASS: Test 2 - PEMDAS without parens")
    Otherwise:
        Display("FAIL: Test 2 - PEMDAS without parens")
    End If

    # Test 3: Nested parentheses - ((10 + 5) / 3) * 2 = 10
    Let result3 be ((10 plus 5) divided by 3) multiplied by 2
    If result3 is equal to 10:
        Display("PASS: Test 3 - nested parentheses")
    Otherwise:
        Display("FAIL: Test 3 - nested parentheses")
    End If

    # Test 4: Subtraction with parentheses - 20 - (3 + 7) = 10
    Let result4 be 20 minus (3 plus 7)
    If result4 is equal to 10:
        Display("PASS: Test 4 - subtraction with parens")
    Otherwise:
        Display("FAIL: Test 4 - subtraction with parens")
    End If

    # Test 5: Complex expression - (15 - 5) * (4 + 1) = 50
    Let result5 be (15 minus 5) multiplied by (4 plus 1)
    If result5 is equal to 50:
        Display("PASS: Test 5 - multiple grouped expressions")
    Otherwise:
        Display("FAIL: Test 5 - multiple grouped expressions")
    End If

    # Test 6: Parentheses with negative numbers - (negative 5 + 10) * 2 = 10
    Let result6 be (-5 plus 10) multiplied by 2
    If result6 is equal to 10:
        Display("PASS: Test 6 - parentheses with negatives")
    Otherwise:
        Display("FAIL: Test 6 - parentheses with negatives")
    End If

    Return 0
End Process
