Note: Test dictionary literals and operations
Process called "main" returns Integer:
    Note: Test 1: Basic dictionary literal
    Let ages be dictionary with: 1 as 25 and 2 as 30 and 3 as 35
    Let size be dict_size(ages)
    If size is not equal to 3:
        print_string("FAIL: dict_size")
        Return 1
    End If

    Note: Test 2: dict_get
    Let age1 be dict_get(ages, 1)
    If age1 is not equal to 25:
        print_string("FAIL: dict_get")
        Return 1
    End If

    Note: Test 3: dict_has
    Let has2 be dict_has(ages, 2)
    If has2 is not equal to 1:
        print_string("FAIL: dict_has true")
        Return 1
    End If

    Let has99 be dict_has(ages, 99)
    If has99 is not equal to 0:
        print_string("FAIL: dict_has false")
        Return 1
    End If

    Note: Test 4: dict_set new key
    Let mydict be dict_create()
    dict_set(mydict, 10, 100)
    dict_set(mydict, 20, 200)
    Let dict_len be dict_size(mydict)
    If dict_len is not equal to 2:
        print_string("FAIL: dict_set new")
        Return 1
    End If

    Note: Test 5: dict_set update existing
    dict_set(mydict, 10, 999)
    Let updated be dict_get(mydict, 10)
    If updated is not equal to 999:
        print_string("FAIL: dict_set update")
        Return 1
    End If

    Note: Test 6: dict_remove
    dict_remove(mydict, 10)
    Let after_remove be dict_size(mydict)
    If after_remove is not equal to 1:
        print_string("FAIL: dict_remove")
        Return 1
    End If

    Note: Test 7: dict_keys
    Let d be dictionary with: 5 as 50 and 6 as 60
    Let keys be dict_keys(d)
    Let keys_len be list_length(keys)
    If keys_len is not equal to 2:
        print_string("FAIL: dict_keys")
        Return 1
    End If

    Note: Test 8: dict_values
    Let vals be dict_values(d)
    Let vals_len be list_length(vals)
    If vals_len is not equal to 2:
        print_string("FAIL: dict_values")
        Return 1
    End If

    Note: Test 9: Context-aware "dictionary" as variable
    Let dictionary be 42
    If dictionary is not equal to 42:
        print_string("FAIL: dictionary as variable")
        Return 1
    End If

    print_string("PASS: All dictionary tests")
    Return 0
End Process
