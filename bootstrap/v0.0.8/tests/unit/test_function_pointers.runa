Note: Test function pointers with $ syntax
Note: Function pointers allow passing functions as values

Process called "add" takes a as Integer, b as Integer returns Integer:
    Return a plus b
End Process

Process called "subtract" takes a as Integer, b as Integer returns Integer:
    Return a minus b
End Process

Process called "apply_operation" takes x as Integer, y as Integer, operation as Integer returns Integer:
    Note: operation is a function pointer
    Note: Call it with indirect call syntax
    Let result be operation(x, y)
    Return result
End Process

Process called "main" returns Integer:
    Note: Test basic function pointer creation with $
    Let add_ptr be $add
    Let sub_ptr be $subtract

    Note: Test indirect function call through pointer
    Let result1 be add_ptr(5, 3)
    If result1 is not equal to 8:
        Return 1
    End If

    Let result2 be sub_ptr(10, 4)
    If result2 is not equal to 6:
        Return 2
    End If

    Note: Test passing function pointers as arguments
    Let result3 be apply_operation(7, 2, $add)
    If result3 is not equal to 9:
        Return 3
    End If

    Let result4 be apply_operation(7, 2, $subtract)
    If result4 is not equal to 5:
        Return 4
    End If

    Return 0
End Process
