# Full Compilation Integration Test
# Tests a complete program with multiple features

Process called "calculate_average" takes a as Integer, b as Integer, c as Integer returns Integer:
    Let sum be a plus b
    Set sum to sum plus c
    Return sum divided by 3
End Process

Process called "find_max" takes x as Integer, y as Integer returns Integer:
    If x is greater than y:
        Return x
    Otherwise:
        Return y
    End If
End Process

Process called "count_to_n" takes n as Integer returns Integer:
    Let count be 0
    Let i be 0
    Let continue_counting be 1

    While continue_counting is equal to 1:
        Set count to count plus 1
        Set i to i plus 1
        If i is greater than or equal to n:
            Set continue_counting to 0
        End If
    End While

    Return count
End Process

Process called "main" returns Integer:
    # Test function calls
    Let avg be calculate_average(10, 20, 30)
    If avg is not equal to 20:
        Return 1
    End If

    # Test conditionals
    Let max_val be find_max(15, 25)
    If max_val is not equal to 25:
        Return 2
    End If

    # Test loops
    Let count be count_to_n(10)
    If count is not equal to 10:
        Return 3
    End If

    # Test complex expression
    Let complex be 5 plus 3 multiplied by 2
    If complex is not equal to 11:
        Return 4
    End If

    # Test nested calls
    Let nested_max be find_max(calculate_average(5, 10, 15), calculate_average(20, 30, 40))
    # Should be find_max(10, 30) = 30
    If nested_max is not equal to 30:
        Return 5
    End If

    Return 0
End Process