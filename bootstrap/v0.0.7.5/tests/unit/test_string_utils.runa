Process called "test_string_builder_create" returns Integer:
    Let sb be string_builder_create()
    assert(sb is not equal to 0)

    Let initial_length be string_builder_get_length(sb)
    assert(initial_length is equal to 0)

    string_builder_destroy(sb)
    Return 0
End Process

Process called "test_string_builder_append" returns Integer:
    Let sb be string_builder_create()
    string_builder_append(sb, "Hello")
    string_builder_append(sb, " World")

    Let result be string_builder_to_string(sb)
    Let expected be "Hello World"
    assert(string_equals(result, expected))

    string_builder_destroy(sb)
    Return 0
End Process

Process called "test_string_builder_capacity_growth" returns Integer:
    Let sb be string_builder_create_with_capacity(4)

    # Test automatic capacity growth
    string_builder_append(sb, "This string is longer than initial capacity")

    Let result be string_builder_to_string(sb)
    Let expected be "This string is longer than initial capacity"
    assert(string_equals(result, expected))

    string_builder_destroy(sb)
    Return 0
End Process