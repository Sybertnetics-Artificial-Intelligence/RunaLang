# Function Definition Test
# Tests function calls, parameters, and return values

Process called "add_numbers" takes a as Integer, b as Integer returns Integer:
    Return a plus b
End Process

Process called "multiply" takes x as Integer, y as Integer returns Integer:
    Return x multiplied by y
End Process

Process called "factorial" takes n as Integer returns Integer:
    If n is less than or equal to 1:
        Return 1
    End If

    Let n_minus_one be n minus 1
    Let recursive_result be factorial(n_minus_one)
    Return n multiplied by recursive_result
End Process

Process called "is_even" takes num as Integer returns Integer:
    Let remainder be num modulo 2
    If remainder is equal to 0:
        Return 1  # true
    Otherwise:
        Return 0  # false
    End If
End Process

Process called "max_of_three" takes a as Integer, b as Integer, c as Integer returns Integer:
    Let max be a
    If b is greater than max:
        Set max to b
    End If
    If c is greater than max:
        Set max to c
    End If
    Return max
End Process

Process called "main" returns Integer:
    # Test simple function call
    Let sum be add_numbers(10, 20)
    If sum is not equal to 30:
        Return 1
    End If

    # Test another function
    Let product be multiply(6, 7)
    If product is not equal to 42:
        Return 2
    End If

    # Test recursive function
    Let fact5 be factorial(5)
    If fact5 is not equal to 120:
        Return 3
    End If

    # Test function returning boolean-like value
    Let even_check be is_even(10)
    If even_check is not equal to 1:
        Return 4
    End If

    Let odd_check be is_even(7)
    If odd_check is not equal to 0:
        Return 5
    End If

    # Test function with multiple parameters
    Let max_val be max_of_three(10, 25, 15)
    If max_val is not equal to 25:
        Return 6
    End If

    # Test nested function calls
    Let nested be add_numbers(multiply(3, 4), multiply(2, 5))
    # Should be add_numbers(12, 10) = 22
    If nested is not equal to 22:
        Return 7
    End If

    Return 0
End Process