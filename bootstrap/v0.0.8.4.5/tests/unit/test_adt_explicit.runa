Note: Comprehensive Implicit Variant Syntax Test
Note: Tests both explicit and implicit variant construction

Type Option is:
    | None
    | Some with value as Integer
End Type

Type Result is:
    | Success
    | Failure with message as Integer
End Type

Type Status is:
    | Pending
    | Active
    | Complete
End Type

Process called "main" returns Integer:
    Note: Test 1: Explicit syntax for fieldless variant
    Let x be Option as None
    If x is equal to 0:
        Return 1
    End If

    Note: Test 2: Implicit syntax for fieldless variant
    Let y be None
    If y is equal to 0:
        Return 2
    End If

    Note: Test 3: Multiple implicit variants from same type
    Let success be Success
    If success is equal to 0:
        Return 3
    End If

    Note: Test 4: Mixing explicit and implicit syntax
    Let explicit_pending be Status as Pending
    Let implicit_active be Active
    Let implicit_complete be Complete
    If explicit_pending is equal to 0:
        Return 4
    End If
    If implicit_active is equal to 0:
        Return 5
    End If
    If implicit_complete is equal to 0:
        Return 6
    End If

    Note: Test 5: Explicit syntax with fields still works
    Let some_val be Option as Some with value as 42
    If some_val is equal to 0:
        Return 7
    End If

    Note: All tests passed - both explicit and implicit syntax working
    Return 0
End Process
