// Test arithmetic operations and precedence
fn test_add() -> i64 {
    return 10 + 20;
}

fn test_sub() -> i64 {
    return 50 - 20;
}

fn test_mul() -> i64 {
    return 5 * 6;
}

fn test_div() -> i64 {
    return 60 / 2;
}

fn test_precedence() -> i64 {
    return 10 + 20 * 3;  // Should be 70, not 90
}

fn test_parentheses() -> i64 {
    return (10 + 20) * 3;  // Should be 90
}

fn test_complex() -> i64 {
    return (100 - 50) / (2 + 3);  // Should be 10
}

fn main() -> i64 {
    if (test_add() != 30) {
        return 1;
    }
    if (test_sub() != 30) {
        return 2;
    }
    if (test_mul() != 30) {
        return 3;
    }
    if (test_div() != 30) {
        return 4;
    }
    if (test_precedence() != 70) {
        return 5;
    }
    if (test_parentheses() != 90) {
        return 6;
    }
    if (test_complex() != 10) {
        return 7;
    }
    return 0;
}