// Test if statements
fn test_simple_if() -> i64 {
    if (1 == 1) {
        return 10;
    }
    return 20;
}

fn test_if_else() -> i64 {
    if (0 == 1) {
        return 30;
    } else {
        return 40;
    }
}

// Test nested if-else (simulating else-if)
fn test_nested_if() -> i64 {
    let x: i64 = 5;
    if (x < 3) {
        return 1;
    } else {
        if (x < 7) {
            return 2;
        } else {
            return 3;
        }
    }
}

// Test while loops
fn test_while_loop() -> i64 {
    let count: i64 = 0;
    let sum: i64 = 0;
    let done: i64 = 0;

    while (done == 0) {
        sum = sum + count;
        count = count + 1;
        if (count > 5) {
            done = 1;
        }
    }
    return sum;
}

fn main() -> i64 {
    let result: i64 = test_simple_if();
    if (result != 10) {
        return 1;
    }

    result = test_if_else();
    if (result != 40) {
        return 2;
    }

    result = test_nested_if();
    if (result != 2) {
        return 3;
    }

    result = test_while_loop();
    if (result != 15) {
        return 4;
    }

    return 0;
}