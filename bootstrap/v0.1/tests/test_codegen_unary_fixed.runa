// Test unary operators (v0.0 compatible)
fn test_negate() -> i64 {
    let x: i64 = 10;
    return -x;
}

fn test_double_negate() -> i64 {
    let x: i64 = 5;
    return -(-x);
}

fn test_negate_expression() -> i64 {
    return -(10 + 5);
}

fn test_complex_unary() -> i64 {
    let x: i64 = 10;
    let y: i64 = -x + 5;
    return y;
}

fn main() -> i64 {
    if (test_negate() != -10) {
        return 1;
    }
    if (test_double_negate() != 5) {
        return 2;
    }
    if (test_negate_expression() != -15) {
        return 3;
    }
    if (test_complex_unary() != -5) {
        return 4;
    }
    return 0;
}