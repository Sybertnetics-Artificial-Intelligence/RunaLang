// Test function calls and parameters
fn no_params() -> i64 {
    return 100;
}

fn one_param(x: i64) -> i64 {
    return x * 2;
}

fn two_params(x: i64, y: i64) -> i64 {
    return x + y;
}

fn three_params(x: i64, y: i64, z: i64) -> i64 {
    return x + y + z;
}

fn recursive(n: i64) -> i64 {
    if (n <= 1) {
        return 1;
    }
    return n * recursive(n - 1);
}

fn nested_calls(x: i64) -> i64 {
    return one_param(two_params(x, 10));
}

fn main() -> i64 {
    if (no_params() != 100) {
        return 1;
    }
    if (one_param(5) != 10) {
        return 2;
    }
    if (two_params(3, 7) != 10) {
        return 3;
    }
    if (three_params(2, 3, 5) != 10) {
        return 4;
    }
    if (recursive(5) != 120) {  // 5! = 120
        return 5;
    }
    if (nested_calls(5) != 30) {  // (5+10)*2 = 30
        return 6;
    }
    return 0;
}