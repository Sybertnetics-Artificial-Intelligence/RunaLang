// Test comparison operators
fn test_equal() -> i64 {
    if (5 == 5) {
        return 1;
    }
    return 0;
}

fn test_not_equal() -> i64 {
    if (5 != 10) {
        return 1;
    }
    return 0;
}

fn test_less() -> i64 {
    if (5 < 10) {
        return 1;
    }
    return 0;
}

fn test_greater() -> i64 {
    if (10 > 5) {
        return 1;
    }
    return 0;
}

fn test_less_equal() -> i64 {
    if (5 <= 5) {
        if (4 <= 5) {
            return 1;
        }
    }
    return 0;
}

fn test_greater_equal() -> i64 {
    if (5 >= 5) {
        if (6 >= 5) {
            return 1;
        }
    }
    return 0;
}

fn test_chained() -> i64 {
    let x: i64 = 5;
    let y: i64 = 10;
    let z: i64 = 15;

    if (x < y) {
        if (y < z) {
            if (x < z) {
                return 1;
            }
        }
    }
    return 0;
}

fn main() -> i64 {
    if (test_equal() != 1) {
        return 1;
    }
    if (test_not_equal() != 1) {
        return 2;
    }
    if (test_less() != 1) {
        return 3;
    }
    if (test_greater() != 1) {
        return 4;
    }
    if (test_less_equal() != 1) {
        return 5;
    }
    if (test_greater_equal() != 1) {
        return 6;
    }
    if (test_chained() != 1) {
        return 7;
    }
    return 0;
}