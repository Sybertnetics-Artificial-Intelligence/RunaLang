Note: Test for-each loops
Process called "main" returns Integer:
    Note: Test 1: Basic for-each with list
    Let nums be list containing 1, 2, 3, 4, 5
    Let sum be 0
    For each n in nums:
        Set sum to sum plus n
    End For
    If sum is not equal to 15:
        print_string("FAIL: basic for-each")
        Return 1
    End If

    Note: Test 2: For-each with empty list
    Let empty be list_create()
    Let count be 0
    For each item in empty:
        Set count to count plus 1
    End For
    If count is not equal to 0:
        print_string("FAIL: for-each empty")
        Return 1
    End If

    Note: Test 3: Nested for-each loops
    Let outer be list containing 2, 3
    Let inner be list containing 10, 20
    Let product_sum be 0
    For each x in outer:
        For each y in inner:
            Set product_sum to product_sum plus x multiplied by y
        End For
    End For
    If product_sum is not equal to 150:
        print_string("FAIL: nested for-each")
        Return 1
    End If

    Note: Test 4: For-each with list_create and list_append
    Let mylist be list_create()
    list_append(mylist, 7)
    list_append(mylist, 8)
    list_append(mylist, 9)
    Let total be 0
    For each val in mylist:
        Set total to total plus val
    End For
    If total is not equal to 24:
        print_string("FAIL: for-each with created list")
        Return 1
    End If

    Note: Test 5: For-each modifying external variable
    Let accumulator be 1
    Let factors be list containing 2, 3, 4
    For each f in factors:
        Set accumulator to accumulator multiplied by f
    End For
    If accumulator is not equal to 24:
        print_string("FAIL: for-each external variable")
        Return 1
    End If

    print_string("PASS: All for-each tests")
    Return 0
End Process
