Note: Comprehensive test for canonical collection syntax

Process called "main" takes argc as Integer, argv as Integer returns Integer:
    Note: Test 1 - Simple list literal
    Let numbers be a list containing 1, 2, 3
    print_string("Test 1: Simple list - PASS")
    print_newline()

    Note: Test 2 - List with 'and' separator
    Let items be a list containing 10, 20, and 30
    print_string("Test 2: List with 'and' - PASS")
    print_newline()

    Note: Test 3 - Single element list
    Let single be a list containing 42
    print_string("Test 3: Single element list - PASS")
    print_newline()

    Note: Test 4 - Array literal with initialization
    Let coordinates be an Array of 3 Integers containing 1, 2, 3
    print_string("Test 4: Array literal - PASS")
    print_newline()

    Note: Test 5 - Array without initialization
    Let buffer be an Array of 10 Integers
    print_string("Test 5: Uninitialized array - PASS")
    print_newline()

    Note: Test 6 - Using 'a' as variable name
    Let a be 100
    print_string("Test 6: 'a' as variable - PASS")
    print_newline()

    Note: Test 7 - Using 'an' as variable name
    Let an be 200
    print_string("Test 7: 'an' as variable - PASS")
    print_newline()

    Note: Test 8 - List with expressions
    Let x be 5
    Let y be 10
    Let calculated be a list containing x, y, 15
    print_string("Test 8: List with expressions - PASS")
    print_newline()

    print_string("All canonical collection tests passed!")
    print_newline()

    Return 0
End Process
