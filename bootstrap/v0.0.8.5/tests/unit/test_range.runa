Note: Comprehensive test for range expressions (to/through)

Process called "main" returns Integer:
    Note: Test 1: "to" (exclusive) basic
    Let count1 be 0
    For i from 1 to 5:
        Set count1 to count1 plus 1
    End For
    If count1 is not equal to 4:
        print_string("FAIL: Test 1 - expected 4, got ")
        print_integer(count1)
        print_string("\n")
        Return 1
    End If
    
    Note: Test 2: "through" (inclusive) basic
    Let count2 be 0
    For j from 1 through 5:
        Set count2 to count2 plus 1
    End For
    If count2 is not equal to 5:
        print_string("FAIL: Test 2 - expected 5, got ")
        print_integer(count2)
        print_string("\n")
        Return 2
    End If
    
    Note: Test 3: "to" with step
    Let count3 be 0
    For k from 0 to 10 by 2:
        Set count3 to count3 plus 1
    End For
    If count3 is not equal to 5:
        print_string("FAIL: Test 3 - expected 5, got ")
        print_integer(count3)
        print_string("\n")
        Return 3
    End If
    
    Note: Test 4: "through" with step
    Let count4 be 0
    For m from 0 through 10 by 2:
        Set count4 to count4 plus 1
    End For
    If count4 is not equal to 6:
        print_string("FAIL: Test 4 - expected 6, got ")
        print_integer(count4)
        print_string("\n")
        Return 4
    End If
    
    Note: Test 5: Single element "through"
    Let count5 be 0
    For n from 5 through 5:
        Set count5 to count5 plus 1
    End For
    If count5 is not equal to 1:
        print_string("FAIL: Test 5 - expected 1, got ")
        print_integer(count5)
        print_string("\n")
        Return 5
    End If
    
    Note: Test 6: Zero iterations with "to"
    Let count6 be 0
    For p from 5 to 5:
        Set count6 to count6 plus 1
    End For
    If count6 is not equal to 0:
        print_string("FAIL: Test 6 - expected 0, got ")
        print_integer(count6)
        print_string("\n")
        Return 6
    End If
    
    print_string("All range expression tests passed!\n")
    Return 0
End Process
