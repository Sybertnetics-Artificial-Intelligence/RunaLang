Note: Comprehensive test for character literal feature
Note: Tests basic character literals, escape sequences, and character operations

Process called "main" returns Integer:
    Note: Test 1: Basic ASCII character literal
    Let letter_a be 'a'
    Display "Test 1: Character 'a' = "
    Display letter_a
    Display "\n"

    Note: Test 2: Digit character
    Let digit_5 be '5'
    Display "Test 2: Character '5' = "
    Display digit_5
    Display "\n"

    Note: Test 3: Newline escape sequence
    Let newline_char be '\n'
    Display "Test 3: Newline character code = "
    Display newline_char
    Display "\n"

    Note: Test 4: Tab escape sequence
    Let tab_char be '\t'
    Display "Test 4: Tab character code = "
    Display tab_char
    Display "\n"

    Note: Test 5: Carriage return escape sequence
    Let cr_char be '\r'
    Display "Test 5: Carriage return code = "
    Display cr_char
    Display "\n"

    Note: Test 6: Null character escape sequence
    Let null_char be '\0'
    Display "Test 6: Null character code = "
    Display null_char
    Display "\n"

    Note: Test 7: Backslash escape sequence
    Let backslash_char be '\\'
    Display "Test 7: Backslash character code = "
    Display backslash_char
    Display "\n"

    Note: Test 8: Single quote escape sequence
    Let quote_char be '\''
    Display "Test 8: Single quote character code = "
    Display quote_char
    Display "\n"

    Note: Test 9: Space character
    Let space_char be ' '
    Display "Test 9: Space character code = "
    Display space_char
    Display "\n"

    Note: Test 10: Uppercase letter
    Let uppercase_z be 'Z'
    Display "Test 10: Character 'Z' = "
    Display uppercase_z
    Display "\n"

    Note: Test 11: Character arithmetic (convert lowercase to uppercase)
    Let lowercase_a be 'a'
    Let uppercase_a be 'A'
    Let diff be lowercase_a minus uppercase_a
    Display "Test 11: Difference between 'a' and 'A' = "
    Display diff
    Display "\n"

    Note: Test 12: Character comparison
    Let char1 be 'b'
    Let char2 be 'c'
    If char1 is less than char2:
        Display "Test 12: 'b' is less than 'c' - PASS\n"
    Otherwise:
        Display "Test 12: FAIL\n"
    End If

    Note: Test 13: Character equality
    Let char_x be 'x'
    Let char_x2 be 'x'
    If char_x is equal to char_x2:
        Display "Test 13: 'x' equals 'x' - PASS\n"
    Otherwise:
        Display "Test 13: FAIL\n"
    End If

    Note: Test 14: Character as array index (using character code)
    Let char_index be '3'
    Let index_value be char_index minus '0'
    Display "Test 14: Character '3' as numeric index = "
    Display index_value
    Display "\n"

    Note: Test 15: Multiple character operations
    Let start_char be 'A'
    Let offset be 5
    Let result_char be start_char plus offset
    Display "Test 15: 'A' + 5 = "
    Display result_char
    Display " (should be 'F' = 70)\n"

    Display "\nAll character literal tests completed!\n"
    Return 0
End Process
