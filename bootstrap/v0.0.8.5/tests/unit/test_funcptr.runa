Note: Comprehensive test for function pointers

Process called "add" takes a as Integer, b as Integer returns Integer:
    Return a plus b
End Process

Process called "subtract" takes a as Integer, b as Integer returns Integer:
    Return a minus b
End Process

Process called "multiply" takes a as Integer, b as Integer returns Integer:
    Return a multiplied by b
End Process

Process called "apply_op" takes fn as Integer, x as Integer, y as Integer returns Integer:
    Return fn(x, y)
End Process

Process called "main" returns Integer:
    Note: Test 1: Direct function pointer call
    Let add_ptr be $add
    Let result1 be add_ptr(10, 5)
    If result1 is not equal to 15:
        Display "FAIL: Test 1"
        Return 1
    End If
    
    Note: Test 2: Multiple function pointers
    Let sub_ptr be $subtract
    Let result2 be sub_ptr(10, 5)
    If result2 is not equal to 5:
        Display "FAIL: Test 2"
        Return 2
    End If
    
    Note: Test 3: Pass function pointer as argument
    Let mult_ptr be $multiply
    Let result3 be apply_op(mult_ptr, 10, 5)
    If result3 is not equal to 50:
        Display "FAIL: Test 3"
        Return 3
    End If
    
    Note: Test 4: Pass different function pointers to same function
    Let result4a be apply_op(add_ptr, 7, 3)
    Let result4b be apply_op(sub_ptr, 7, 3)
    If result4a is not equal to 10:
        Display "FAIL: Test 4a"
        Return 4
    End If
    If result4b is not equal to 4:
        Display "FAIL: Test 4b"
        Return 5
    End If
    
    Note: Test 5: Reassign function pointer
    Let fn_ptr be $add
    Let result5a be fn_ptr(2, 3)
    Set fn_ptr to $multiply
    Let result5b be fn_ptr(2, 3)
    If result5a is not equal to 5:
        Display "FAIL: Test 5a"
        Return 6
    End If
    If result5b is not equal to 6:
        Display "FAIL: Test 5b"
        Return 7
    End If
    
    Display "All function pointer tests passed!"
    Return 0
End Process
