Note: 
Copyright 2025 Sybertnetics Artificial Intelligence Solutions

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
:End Note

Note:
This file handles ASCII character conversions and validation.

This file performs the following tasks:
- Convert characters to uppercase/lowercase
- Validate ASCII ranges
- Check character classes (digit, alpha, whitespace, etc.)
- Convert between characters and integer values

This file is essential because of the following reasons:
- Text processing requires character classification
- Case conversion for string operations
- ASCII validation for parser/lexer

Dependencies:
- NONE (pure integer operations)
:End Note

Note: ============================================================================
Note: ASCII Character Constants
Note: ============================================================================

Note: ASCII control characters
Let ASCII_NULL be 0
Let ASCII_TAB be 9
Let ASCII_NEWLINE be 10
Let ASCII_CARRIAGE_RETURN be 13
Let ASCII_SPACE be 32

Note: ASCII digits
Let ASCII_ZERO be 48
Let ASCII_NINE be 57

Note: ASCII uppercase letters
Let ASCII_A_UPPER be 65
Let ASCII_Z_UPPER be 90

Note: ASCII lowercase letters
Let ASCII_A_LOWER be 97
Let ASCII_Z_LOWER be 122

Note: ASCII special characters
Let ASCII_UNDERSCORE be 95
Let ASCII_HYPHEN be 45
Let ASCII_PERIOD be 46
Let ASCII_COMMA be 44
Let ASCII_SEMICOLON be 59
Let ASCII_COLON be 58

Note: ============================================================================
Note: Character Classification
Note: ============================================================================

Process called "is_ascii" takes ch as Integer returns Integer:
    Note: Check if character is valid ASCII (0-127)

    If ch is less than 0:
        Return 0
    End If

    If ch is greater than 127:
        Return 0
    End If

    Return 1
End Process

Process called "is_digit" takes ch as Integer returns Integer:
    Note: Check if character is a digit (0-9)

    If ch is less than 48:
        Return 0
    End If

    If ch is greater than 57:
        Return 0
    End If

    Return 1
End Process

Process called "is_alpha_upper" takes ch as Integer returns Integer:
    Note: Check if character is uppercase letter (A-Z)

    If ch is less than 65:
        Return 0
    End If

    If ch is greater than 90:
        Return 0
    End If

    Return 1
End Process

Process called "is_alpha_lower" takes ch as Integer returns Integer:
    Note: Check if character is lowercase letter (a-z)

    If ch is less than 97:
        Return 0
    End If

    If ch is greater than 122:
        Return 0
    End If

    Return 1
End Process

Process called "is_alpha" takes ch as Integer returns Integer:
    Note: Check if character is a letter (A-Z or a-z)

    If is_alpha_upper(ch) is equal to 1:
        Return 1
    End If

    If is_alpha_lower(ch) is equal to 1:
        Return 1
    End If

    Return 0
End Process

Process called "is_alphanumeric" takes ch as Integer returns Integer:
    Note: Check if character is letter or digit

    If is_alpha(ch) is equal to 1:
        Return 1
    End If

    If is_digit(ch) is equal to 1:
        Return 1
    End If

    Return 0
End Process

Process called "is_whitespace" takes ch as Integer returns Integer:
    Note: Check if character is whitespace (space, tab, newline, CR)

    If ch is equal to 32:
        Return 1
    End If

    If ch is equal to 9:
        Return 1
    End If

    If ch is equal to 10:
        Return 1
    End If

    If ch is equal to 13:
        Return 1
    End If

    Return 0
End Process

Process called "is_printable" takes ch as Integer returns Integer:
    Note: Check if character is printable (ASCII 32-126)

    If ch is less than 32:
        Return 0
    End If

    If ch is greater than 126:
        Return 0
    End If

    Return 1
End Process

Note: ============================================================================
Note: Case Conversion
Note: ============================================================================

Process called "to_uppercase" takes ch as Integer returns Integer:
    Note: Convert lowercase letter to uppercase
    Note: Returns unchanged if not lowercase letter

    If is_alpha_lower(ch) is equal to 1:
        Let result be ch minus 32
        Return result
    End If

    Return ch
End Process

Process called "to_lowercase" takes ch as Integer returns Integer:
    Note: Convert uppercase letter to lowercase
    Note: Returns unchanged if not uppercase letter

    If is_alpha_upper(ch) is equal to 1:
        Let result be ch plus 32
        Return result
    End If

    Return ch
End Process

Note: ============================================================================
Note: Digit/Character Conversion
Note: ============================================================================

Process called "digit_to_integer" takes ch as Integer returns Integer:
    Note: Convert ASCII digit character to integer value
    Note: '0' -> 0, '1' -> 1, ..., '9' -> 9
    Note: Returns -1 if not a digit

    If is_digit(ch) is equal to 0:
        Return -1
    End If

    Let result be ch minus 48
    Return result
End Process

Process called "integer_to_digit" takes value as Integer returns Integer:
    Note: Convert integer (0-9) to ASCII digit character
    Note: 0 -> '0', 1 -> '1', ..., 9 -> '9'
    Note: Returns -1 if value out of range

    If value is less than 0:
        Return -1
    End If

    If value is greater than 9:
        Return -1
    End If

    Let result be value plus 48
    Return result
End Process

Process called "hex_digit_to_integer" takes ch as Integer returns Integer:
    Note: Convert hex digit to integer value
    Note: '0'-'9' -> 0-9, 'A'-'F' -> 10-15, 'a'-'f' -> 10-15
    Note: Returns -1 if not a hex digit

    Note: Check 0-9
    If is_digit(ch) is equal to 1:
        Return ch minus 48
    End If

    Note: Check A-F
    If ch is greater than or equal to 65:
        If ch is less than or equal to 70:
            Return ch minus 55
        End If
    End If

    Note: Check a-f
    If ch is greater than or equal to 97:
        If ch is less than or equal to 102:
            Return ch minus 87
        End If
    End If

    Return -1
End Process

Process called "integer_to_hex_digit" takes value as Integer, uppercase as Integer returns Integer:
    Note: Convert integer (0-15) to hex digit character
    Note: If uppercase=1: 0-9 -> '0'-'9', 10-15 -> 'A'-'F'
    Note: If uppercase=0: 0-9 -> '0'-'9', 10-15 -> 'a'-'f'
    Note: Returns -1 if value out of range

    If value is less than 0:
        Return -1
    End If

    If value is greater than 15:
        Return -1
    End If

    Note: 0-9
    If value is less than 10:
        Return value plus 48
    End If

    Note: 10-15
    If uppercase is equal to 1:
        Return value plus 55
    End If

    Return value plus 87
End Process
