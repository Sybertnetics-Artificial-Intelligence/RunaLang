Note:
Copyright 2025 Sybertnetics Artificial Intelligence Solutions

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
:End Note

Note:
MIPS32 Linux System Call Interface

This file implements Linux MIPS32 system calls for the Runa compiler.

Platform-specific details:
- Platform: Linux MIPS32
- Syscall mechanism: syscall instruction
- Syscall number register: $v0 ($2)
- Argument registers: $a0-$a3 ($4-$7), additional args on stack
- Return value: $v0 ($2)
- Error indication: $a3 ($7) set to 1 on error, $v0 contains errno

Linux MIPS32 syscall convention:
- $v0 = syscall number (4000+ range for MIPS32)
- $a0-$a3 = arguments 1-4
- Args 5+ go on stack at 16($sp), 20($sp), etc.
- syscall instruction triggers kernel
- $v0 = return value (or errno if $a3 == 1)

MIPS32 syscall numbers differ from other architectures (4000+ base).
This file provides both syscall number constants and wrapper functions.

MIPS32-specific notes:
- Uses mmap2 (not mmap) for memory mapping (page-offset based)
- Error handling via $a3 register (unlike x86_64 negative return)

Dependencies: None (uses inline assembly for syscalls)
:End Note

Note: MIPS32 Linux syscall numbers differ from other architectures
Process called "SYS_EXIT" returns Integer:
    Return 4001
End Process

Process called "SYS_FORK" returns Integer:
    Return 4002
End Process

Process called "SYS_READ" returns Integer:
    Return 4003
End Process

Process called "SYS_WRITE" returns Integer:
    Return 4004
End Process

Process called "SYS_OPEN" returns Integer:
    Return 4005
End Process

Process called "SYS_CLOSE" returns Integer:
    Return 4006
End Process

Process called "SYS_CREAT" returns Integer:
    Return 4008
End Process

Process called "SYS_LINK" returns Integer:
    Return 4009
End Process

Process called "SYS_UNLINK" returns Integer:
    Return 4010
End Process

Process called "SYS_EXECVE" returns Integer:
    Return 4011
End Process

Process called "SYS_CHDIR" returns Integer:
    Return 4012
End Process

Process called "SYS_MKNOD" returns Integer:
    Return 4014
End Process

Process called "SYS_CHMOD" returns Integer:
    Return 4015
End Process

Process called "SYS_LSEEK" returns Integer:
    Return 4019
End Process

Process called "SYS_GETPID" returns Integer:
    Return 4020
End Process

Process called "SYS_MOUNT" returns Integer:
    Return 4021
End Process

Process called "SYS_SETUID" returns Integer:
    Return 4023
End Process

Process called "SYS_GETUID" returns Integer:
    Return 4024
End Process

Process called "SYS_ACCESS" returns Integer:
    Return 4033
End Process

Process called "SYS_SYNC" returns Integer:
    Return 4036
End Process

Process called "SYS_KILL" returns Integer:
    Return 4037
End Process

Process called "SYS_RENAME" returns Integer:
    Return 4038
End Process

Process called "SYS_MKDIR" returns Integer:
    Return 4039
End Process

Process called "SYS_RMDIR" returns Integer:
    Return 4040
End Process

Process called "SYS_DUP" returns Integer:
    Return 4041
End Process

Process called "SYS_PIPE" returns Integer:
    Return 4042
End Process

Process called "SYS_BRK" returns Integer:
    Return 4045
End Process

Process called "SYS_GETGID" returns Integer:
    Return 4047
End Process

Process called "SYS_IOCTL" returns Integer:
    Return 4054
End Process

Process called "SYS_FCNTL" returns Integer:
    Return 4055
End Process

Process called "SYS_DUP2" returns Integer:
    Return 4063
End Process

Process called "SYS_GETPPID" returns Integer:
    Return 4064
End Process

Process called "SYS_SYMLINK" returns Integer:
    Return 4083
End Process

Process called "SYS_READLINK" returns Integer:
    Return 4085
End Process

Process called "SYS_MUNMAP" returns Integer:
    Return 4091
End Process

Process called "SYS_FCHMOD" returns Integer:
    Return 4094
End Process

Process called "SYS_FCHOWN" returns Integer:
    Return 4095
End Process

Process called "SYS_FSYNC" returns Integer:
    Return 4118
End Process

Process called "SYS_CLONE" returns Integer:
    Return 4120
End Process

Process called "SYS_MPROTECT" returns Integer:
    Return 4125
End Process

Process called "SYS_FLOCK" returns Integer:
    Return 4143
End Process

Process called "SYS_POLL" returns Integer:
    Return 4188
End Process

Process called "SYS_NANOSLEEP" returns Integer:
    Return 4166
End Process

Process called "SYS_MMAP2" returns Integer:
    Return 4210
End Process

Process called "SYS_STAT" returns Integer:
    Return 4106
End Process

Process called "SYS_FSTAT" returns Integer:
    Return 4108
End Process

Process called "SYS_LSTAT" returns Integer:
    Return 4107
End Process

Process called "SYS_WAITPID" returns Integer:
    Return 4007
End Process

Process called "SYS_WAIT4" returns Integer:
    Return 4114
End Process

Process called "SYS_SOCKET" returns Integer:
    Return 4183
End Process

Process called "SYS_BIND" returns Integer:
    Return 4169
End Process

Process called "SYS_LISTEN" returns Integer:
    Return 4174
End Process

Process called "SYS_ACCEPT" returns Integer:
    Return 4168
End Process

Process called "SYS_CONNECT" returns Integer:
    Return 4170
End Process

Process called "SYS_SENDTO" returns Integer:
    Return 4180
End Process

Process called "SYS_RECVFROM" returns Integer:
    Return 4176
End Process

Process called "SYS_SHUTDOWN" returns Integer:
    Return 4182
End Process

Process called "SYS_SETSOCKOPT" returns Integer:
    Return 4181
End Process

Process called "SYS_GETSOCKOPT" returns Integer:
    Return 4173
End Process

Process called "SYS_SOCKETPAIR" returns Integer:
    Return 4184
End Process

Process called "SYS_SENDMSG" returns Integer:
    Return 4179
End Process

Process called "SYS_RECVMSG" returns Integer:
    Return 4177
End Process

Process called "SYS_GETCWD" returns Integer:
    Return 4203
End Process

Process called "SYS_READV" returns Integer:
    Return 4145
End Process

Process called "SYS_WRITEV" returns Integer:
    Return 4146
End Process

Process called "SYS_PREAD64" returns Integer:
    Return 4200
End Process

Process called "SYS_PWRITE64" returns Integer:
    Return 4201
End Process

Process called "SYS_SELECT" returns Integer:
    Return 4142
End Process

Process called "SYS_PSELECT6" returns Integer:
    Return 4301
End Process

Process called "SYS_PPOLL" returns Integer:
    Return 4302
End Process

Process called "SYS_EPOLL_CREATE" returns Integer:
    Return 4248
End Process

Process called "SYS_EPOLL_CREATE1" returns Integer:
    Return 4326
End Process

Process called "SYS_EPOLL_CTL" returns Integer:
    Return 4249
End Process

Process called "SYS_EPOLL_WAIT" returns Integer:
    Return 4250
End Process

Process called "SYS_EPOLL_PWAIT" returns Integer:
    Return 4313
End Process

Process called "SYS_CLOCK_GETTIME" returns Integer:
    Return 4263
End Process

Process called "SYS_CLOCK_SETTIME" returns Integer:
    Return 4262
End Process

Process called "SYS_CLOCK_GETRES" returns Integer:
    Return 4264
End Process

Process called "SYS_CLOCK_NANOSLEEP" returns Integer:
    Return 4265
End Process

Process called "SYS_GETTIMEOFDAY" returns Integer:
    Return 4078
End Process

Process called "SYS_SETTIMEOFDAY" returns Integer:
    Return 4079
End Process

Process called "SYS_SCHED_YIELD" returns Integer:
    Return 4162
End Process

Process called "SYS_SCHED_SETSCHEDULER" returns Integer:
    Return 4160
End Process

Process called "SYS_SCHED_GETSCHEDULER" returns Integer:
    Return 4161
End Process

Process called "SYS_SCHED_SETPARAM" returns Integer:
    Return 4158
End Process

Process called "SYS_SCHED_GETPARAM" returns Integer:
    Return 4159
End Process

Process called "SYS_SCHED_SETAFFINITY" returns Integer:
    Return 4239
End Process

Process called "SYS_SCHED_GETAFFINITY" returns Integer:
    Return 4240
End Process

Process called "SYS_SETPGID" returns Integer:
    Return 4057
End Process

Process called "SYS_GETPGID" returns Integer:
    Return 4132
End Process

Process called "SYS_SETSID" returns Integer:
    Return 4066
End Process

Process called "SYS_GETSID" returns Integer:
    Return 4151
End Process

Process called "SYS_SETRLIMIT" returns Integer:
    Return 4075
End Process

Process called "SYS_GETRLIMIT" returns Integer:
    Return 4076
End Process

Process called "SYS_GETRUSAGE" returns Integer:
    Return 4077
End Process

Process called "SYS_RT_SIGACTION" returns Integer:
    Return 4194
End Process

Process called "SYS_RT_SIGPROCMASK" returns Integer:
    Return 4195
End Process

Process called "SYS_RT_SIGPENDING" returns Integer:
    Return 4196
End Process

Process called "SYS_RT_SIGTIMEDWAIT" returns Integer:
    Return 4197
End Process

Process called "SYS_RT_SIGQUEUEINFO" returns Integer:
    Return 4198
End Process

Process called "SYS_RT_SIGSUSPEND" returns Integer:
    Return 4199
End Process

Process called "SYS_PIPE2" returns Integer:
    Return 4328
End Process

Process called "SYS_EVENTFD" returns Integer:
    Return 4319
End Process

Process called "SYS_EVENTFD2" returns Integer:
    Return 4325
End Process

Process called "SYS_SIGNALFD4" returns Integer:
    Return 4324
End Process

Process called "SYS_TIMERFD_CREATE" returns Integer:
    Return 4321
End Process

Process called "SYS_TIMERFD_SETTIME" returns Integer:
    Return 4322
End Process

Process called "SYS_TIMERFD_GETTIME" returns Integer:
    Return 4323
End Process

Process called "SYS_FUTEX" returns Integer:
    Return 4238
End Process

Process called "SYS_PRCTL" returns Integer:
    Return 4192
End Process

Process called "SYS_GETDENTS64" returns Integer:
    Return 4219
End Process

Process called "SYS_FTRUNCATE" returns Integer:
    Return 4093
End Process

Process called "SYS_TRUNCATE" returns Integer:
    Return 4092
End Process

Process called "SYS_FALLOCATE" returns Integer:
    Return 4320
End Process

Process called "SYS_FADVISE64" returns Integer:
    Return 4254
End Process

Process called "SYS_SENDFILE" returns Integer:
    Return 4207
End Process

Process called "SYS_SPLICE" returns Integer:
    Return 4304
End Process

Process called "SYS_TEE" returns Integer:
    Return 4306
End Process

Process called "SYS_VMSPLICE" returns Integer:
    Return 4307
End Process

Process called "SYS_GETRANDOM" returns Integer:
    Return 4353
End Process

Process called "SYS_MEMFD_CREATE" returns Integer:
    Return 4354
End Process

Process called "SYS_REBOOT" returns Integer:
    Return 4088
End Process

Process called "SYS_SETHOSTNAME" returns Integer:
    Return 4074
End Process

Process called "SYS_SETDOMAINNAME" returns Integer:
    Return 4121
End Process

Process called "SYS_UMASK" returns Integer:
    Return 4060
End Process

Process called "SYS_SETGID" returns Integer:
    Return 4046
End Process

Process called "SYS_SETREUID" returns Integer:
    Return 4070
End Process

Process called "SYS_SETREGID" returns Integer:
    Return 4071
End Process

Process called "SYS_SETRESUID" returns Integer:
    Return 4185
End Process

Process called "SYS_SETRESGID" returns Integer:
    Return 4190
End Process

Process called "SYS_GETRESUID" returns Integer:
    Return 4186
End Process

Process called "SYS_GETRESGID" returns Integer:
    Return 4191
End Process

Process called "SYS_SETFSUID" returns Integer:
    Return 4138
End Process

Process called "SYS_SETFSGID" returns Integer:
    Return 4139
End Process

Process called "SYS_CAPGET" returns Integer:
    Return 4204
End Process

Process called "SYS_CAPSET" returns Integer:
    Return 4205
End Process

Note: File descriptor constants
Process called "STDIN_FILENO" returns Integer:
    Return 0
End Process

Process called "STDOUT_FILENO" returns Integer:
    Return 1
End Process

Process called "STDERR_FILENO" returns Integer:
    Return 2
End Process

Note: File open flags
Process called "O_RDONLY" returns Integer:
    Return 0
End Process

Process called "O_WRONLY" returns Integer:
    Return 1
End Process

Process called "O_RDWR" returns Integer:
    Return 2
End Process

Process called "O_CREAT" returns Integer:
    Return 256
End Process

Process called "O_TRUNC" returns Integer:
    Return 512
End Process

Process called "O_APPEND" returns Integer:
    Return 8
End Process

Note: Memory protection flags
Process called "PROT_NONE" returns Integer:
    Return 0
End Process

Process called "PROT_READ" returns Integer:
    Return 1
End Process

Process called "PROT_WRITE" returns Integer:
    Return 2
End Process

Process called "PROT_EXEC" returns Integer:
    Return 4
End Process

Note: Memory mapping flags
Process called "MAP_SHARED" returns Integer:
    Return 1
End Process

Process called "MAP_PRIVATE" returns Integer:
    Return 2
End Process

Process called "MAP_ANONYMOUS" returns Integer:
    Return 2048
End Process

Note: Generic syscall wrappers using inline assembly
Process called "syscall_0" takes syscall_number as Integer returns Integer:
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_1" takes syscall_number as Integer, arg1 as Integer returns Integer:
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_2" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer returns Integer:
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        move $a1, arg2
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_3" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer returns Integer:
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        move $a1, arg2
        move $a2, arg3
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_4" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer returns Integer:
    Note: 5th arg on stack at 16($sp)
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        move $a1, arg2
        move $a2, arg3
        sw arg4, 16($sp)
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_5" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer, arg5 as Integer returns Integer:
    Note: 5th and 6th args on stack at 16($sp), 20($sp)
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        move $a1, arg2
        move $a2, arg3
        move $a3, arg4
        sw arg5, 16($sp)
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "syscall_6" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer, arg5 as Integer, arg6 as Integer returns Integer:
    Note: Args 5/6 on stack at 16($sp), 20($sp)
    Let result be 0
    Inline Assembly:
        li $v0, syscall_number
        move $a0, arg1
        move $a1, arg2
        move $a2, arg3
        move $a3, arg4
        sw arg5, 16($sp)
        sw arg6, 20($sp)
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Note: High-level syscall wrappers
Process called "exit" takes status as Integer returns Integer:
    Return syscall_1(SYS_EXIT(), status)
End Process

Process called "read" takes fd as Integer, buffer as Integer, count as Integer returns Integer:
    Return syscall_3(SYS_READ(), fd, buffer, count)
End Process

Process called "write" takes fd as Integer, buffer as Integer, count as Integer returns Integer:
    Return syscall_3(SYS_WRITE(), fd, buffer, count)
End Process

Process called "open" takes path as Integer, flags as Integer, mode as Integer returns Integer:
    Return syscall_3(SYS_OPEN(), path, flags, mode)
End Process

Process called "close" takes fd as Integer returns Integer:
    Return syscall_1(SYS_CLOSE(), fd)
End Process

Process called "getpid" returns Integer:
    Return syscall_0(SYS_GETPID())
End Process

Process called "fork" returns Integer:
    Return syscall_0(SYS_FORK())
End Process

Process called "mmap2" takes addr as Integer, length as Integer, prot as Integer, flags as Integer, fd as Integer, pgoffset as Integer returns Integer:
    Note: MIPS32 uses mmap2 with page offset
    Let result be 0
    Inline Assembly:
        li $v0, SYS_MMAP2()
        move $a0, addr
        move $a1, length
        move $a2, prot
        move $a3, flags
        sw fd, 16($sp)
        sw pgoffset, 20($sp)
        syscall
        move result, $v0
    End Assembly
    Return result
End Process

Process called "munmap" takes addr as Integer, length as Integer returns Integer:
    Return syscall_2(SYS_MUNMAP(), addr, length)
End Process

Process called "chmod" takes path as Integer, mode as Integer returns Integer:
    Return syscall_2(SYS_CHMOD(), path, mode)
End Process

Process called "mkdir" takes path as Integer, mode as Integer returns Integer:
    Return syscall_2(SYS_MKDIR(), path, mode)
End Process

Process called "rmdir" takes path as Integer returns Integer:
    Return syscall_1(SYS_RMDIR(), path)
End Process

Process called "unlink" takes path as Integer returns Integer:
    Return syscall_1(SYS_UNLINK(), path)
End Process

Process called "chdir" takes path as Integer returns Integer:
    Return syscall_1(SYS_CHDIR(), path)
End Process

Process called "nanosleep" takes req as Integer, rem as Integer returns Integer:
    Return syscall_2(SYS_NANOSLEEP(), req, rem)
End Process

Process called "stat" takes path as Integer, statbuf as Integer returns Integer:
    Return syscall_2(SYS_STAT(), path, statbuf)
End Process

Process called "fstat" takes fd as Integer, statbuf as Integer returns Integer:
    Return syscall_2(SYS_FSTAT(), fd, statbuf)
End Process

Process called "lstat" takes path as Integer, statbuf as Integer returns Integer:
    Return syscall_2(SYS_LSTAT(), path, statbuf)
End Process

Process called "socket" takes domain as Integer, socket_type as Integer, protocol as Integer returns Integer:
    Return syscall_3(SYS_SOCKET(), domain, socket_type, protocol)
End Process

Process called "bind" takes sockfd as Integer, addr as Integer, addrlen as Integer returns Integer:
    Return syscall_3(SYS_BIND(), sockfd, addr, addrlen)
End Process

Process called "listen" takes sockfd as Integer, backlog as Integer returns Integer:
    Return syscall_2(SYS_LISTEN(), sockfd, backlog)
End Process

Process called "accept" takes sockfd as Integer, addr as Integer, addrlen as Integer returns Integer:
    Return syscall_3(SYS_ACCEPT(), sockfd, addr, addrlen)
End Process

Process called "connect" takes sockfd as Integer, addr as Integer, addrlen as Integer returns Integer:
    Return syscall_3(SYS_CONNECT(), sockfd, addr, addrlen)
End Process

Process called "getcwd" takes buf as Integer, size as Integer returns Integer:
    Return syscall_2(SYS_GETCWD(), buf, size)
End Process

Process called "readlink" takes path as Integer, buf as Integer, bufsiz as Integer returns Integer:
    Return syscall_3(SYS_READLINK(), path, buf, bufsiz)
End Process

Process called "symlink" takes target as Integer, linkpath as Integer returns Integer:
    Return syscall_2(SYS_SYMLINK(), target, linkpath)
End Process

Process called "clock_gettime" takes clockid as Integer, tp as Integer returns Integer:
    Return syscall_2(SYS_CLOCK_GETTIME(), clockid, tp)
End Process

Process called "gettimeofday" takes tv as Integer, tz as Integer returns Integer:
    Return syscall_2(SYS_GETTIMEOFDAY(), tv, tz)
End Process

Process called "waitpid" takes pid as Integer, wstatus as Integer, options as Integer returns Integer:
    Return syscall_3(SYS_WAITPID(), pid, wstatus, options)
End Process

Process called "kill" takes pid as Integer, sig as Integer returns Integer:
    Return syscall_2(SYS_KILL(), pid, sig)
End Process

Process called "getuid" returns Integer:
    Return syscall_0(SYS_GETUID())
End Process

Process called "getgid" returns Integer:
    Return syscall_0(SYS_GETGID())
End Process

Process called "setuid" takes uid as Integer returns Integer:
    Return syscall_1(SYS_SETUID(), uid)
End Process

Process called "setgid" takes gid as Integer returns Integer:
    Return syscall_1(SYS_SETGID(), gid)
End Process

Process called "ioctl" takes fd as Integer, request as Integer, argp as Integer returns Integer:
    Return syscall_3(SYS_IOCTL(), fd, request, argp)
End Process

Process called "fcntl" takes fd as Integer, cmd as Integer, arg as Integer returns Integer:
    Return syscall_3(SYS_FCNTL(), fd, cmd, arg)
End Process

Process called "dup" takes oldfd as Integer returns Integer:
    Return syscall_1(SYS_DUP(), oldfd)
End Process

Process called "dup2" takes oldfd as Integer, newfd as Integer returns Integer:
    Return syscall_2(SYS_DUP2(), oldfd, newfd)
End Process

Process called "pipe" takes pipefd as Integer returns Integer:
    Return syscall_1(SYS_PIPE(), pipefd)
End Process

Process called "mprotect" takes addr as Integer, len as Integer, prot as Integer returns Integer:
    Return syscall_3(SYS_MPROTECT(), addr, len, prot)
End Process

Process called "brk" takes addr as Integer returns Integer:
    Return syscall_1(SYS_BRK(), addr)
End Process

Process called "execve" takes filename as Integer, argv as Integer, envp as Integer returns Integer:
    Return syscall_3(SYS_EXECVE(), filename, argv, envp)
End Process

Note: Socket domain constants
Process called "AF_INET" returns Integer:
    Return 2
End Process

Process called "AF_INET6" returns Integer:
    Return 10
End Process

Process called "AF_UNIX" returns Integer:
    Return 1
End Process

Note: Socket type constants
Process called "SOCK_STREAM" returns Integer:
    Return 2
End Process

Process called "SOCK_DGRAM" returns Integer:
    Return 1
End Process

Process called "SOCK_RAW" returns Integer:
    Return 3
End Process

Note: Clock IDs
Process called "CLOCK_REALTIME" returns Integer:
    Return 0
End Process

Process called "CLOCK_MONOTONIC" returns Integer:
    Return 1
End Process

Process called "CLOCK_PROCESS_CPUTIME_ID" returns Integer:
    Return 2
End Process

Process called "CLOCK_THREAD_CPUTIME_ID" returns Integer:
    Return 3
End Process

Note: Wait options
Process called "WNOHANG" returns Integer:
    Return 1
End Process

Process called "WUNTRACED" returns Integer:
    Return 2
End Process

Note: Signal numbers
Process called "SIGTERM" returns Integer:
    Return 15
End Process

Process called "SIGKILL" returns Integer:
    Return 9
End Process

Process called "SIGINT" returns Integer:
    Return 2
End Process

Process called "SIGHUP" returns Integer:
    Return 1
End Process

Process called "SIGCHLD" returns Integer:
    Return 18
End Process

