Note:
Copyright 2025 Sybertnetics Artificial Intelligence Solutions

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
:End Note

Note:
Linux ARM32 System Call Interface

This file implements Linux ARM32 (ARMv7) system calls.

Platform-specific details:
- Platform: Linux ARM32
- Syscall mechanism: SWI/SVC instruction (swi #0)
- Syscall number register: R7
- Argument registers: R0-R6 (up to 7 arguments)
- Return value: R0 (negative on error, positive/zero on success)

Linux ARM32 syscall convention:
- R7 = syscall number
- R0-R6 = arguments 1-7
- R0 = return value (or -errno on error)
- SWI #0 or SVC #0 triggers syscall

Linux ARM32 syscall numbers differ from ARM64.
This file provides both syscall number constants and wrapper functions.

Dependencies: None (uses inline assembly for syscalls)
:End Note

Import "compiler/frontend/primitives/core/memory_core.runa" as Memory

Note: ============================================================================
Note: SYSCALL NUMBER CONSTANTS
Note: ============================================================================

Note: Linux ARM32 syscall numbers (from arch/arm/include/asm/unistd.h)
Note: These differ from ARM64 syscall numbers

Process called "SYS_EXIT" returns Integer:
    Return 1
End Process

Process called "SYS_FORK" returns Integer:
    Return 2
End Process

Process called "SYS_READ" returns Integer:
    Return 3
End Process

Process called "SYS_WRITE" returns Integer:
    Return 4
End Process

Process called "SYS_OPEN" returns Integer:
    Return 5
End Process

Process called "SYS_CLOSE" returns Integer:
    Return 6
End Process

Process called "SYS_CREAT" returns Integer:
    Return 8
End Process

Process called "SYS_LINK" returns Integer:
    Return 9
End Process

Process called "SYS_UNLINK" returns Integer:
    Return 10
End Process

Process called "SYS_EXECVE" returns Integer:
    Return 11
End Process

Process called "SYS_CHDIR" returns Integer:
    Return 12
End Process

Process called "SYS_MKNOD" returns Integer:
    Return 14
End Process

Process called "SYS_CHMOD" returns Integer:
    Return 15
End Process

Process called "SYS_LSEEK" returns Integer:
    Return 19
End Process

Process called "SYS_GETPID" returns Integer:
    Return 20
End Process

Process called "SYS_MOUNT" returns Integer:
    Return 21
End Process

Process called "SYS_SETUID" returns Integer:
    Return 23
End Process

Process called "SYS_GETUID" returns Integer:
    Return 24
End Process

Process called "SYS_PTRACE" returns Integer:
    Return 26
End Process

Process called "SYS_PAUSE" returns Integer:
    Return 29
End Process

Process called "SYS_ACCESS" returns Integer:
    Return 33
End Process

Process called "SYS_SYNC" returns Integer:
    Return 36
End Process

Process called "SYS_KILL" returns Integer:
    Return 37
End Process

Process called "SYS_RENAME" returns Integer:
    Return 38
End Process

Process called "SYS_MKDIR" returns Integer:
    Return 39
End Process

Process called "SYS_RMDIR" returns Integer:
    Return 40
End Process

Process called "SYS_DUP" returns Integer:
    Return 41
End Process

Process called "SYS_PIPE" returns Integer:
    Return 42
End Process

Process called "SYS_BRK" returns Integer:
    Return 45
End Process

Process called "SYS_GETGID" returns Integer:
    Return 47
End Process

Process called "SYS_GETEUID" returns Integer:
    Return 49
End Process

Process called "SYS_GETEGID" returns Integer:
    Return 50
End Process

Process called "SYS_ACCT" returns Integer:
    Return 51
End Process

Process called "SYS_UMOUNT2" returns Integer:
    Return 52
End Process

Process called "SYS_IOCTL" returns Integer:
    Return 54
End Process

Process called "SYS_FCNTL" returns Integer:
    Return 55
End Process

Process called "SYS_SETPGID" returns Integer:
    Return 57
End Process

Process called "SYS_UMASK" returns Integer:
    Return 60
End Process

Process called "SYS_CHROOT" returns Integer:
    Return 61
End Process

Process called "SYS_DUP2" returns Integer:
    Return 63
End Process

Process called "SYS_GETPPID" returns Integer:
    Return 64
End Process

Process called "SYS_SETSID" returns Integer:
    Return 66
End Process

Process called "SYS_SIGACTION" returns Integer:
    Return 67
End Process

Process called "SYS_SETREUID" returns Integer:
    Return 70
End Process

Process called "SYS_SETREGID" returns Integer:
    Return 71
End Process

Process called "SYS_SYMLINK" returns Integer:
    Return 83
End Process

Process called "SYS_READLINK" returns Integer:
    Return 85
End Process

Process called "SYS_REBOOT" returns Integer:
    Return 88
End Process

Process called "SYS_MUNMAP" returns Integer:
    Return 91
End Process

Process called "SYS_TRUNCATE" returns Integer:
    Return 92
End Process

Process called "SYS_FTRUNCATE" returns Integer:
    Return 93
End Process

Process called "SYS_FCHMOD" returns Integer:
    Return 94
End Process

Process called "SYS_FCHOWN" returns Integer:
    Return 95
End Process

Process called "SYS_GETPRIORITY" returns Integer:
    Return 96
End Process

Process called "SYS_SETPRIORITY" returns Integer:
    Return 97
End Process

Process called "SYS_STATFS" returns Integer:
    Return 99
End Process

Process called "SYS_FSTATFS" returns Integer:
    Return 100
End Process

Process called "SYS_SYSLOG" returns Integer:
    Return 103
End Process

Process called "SYS_SETITIMER" returns Integer:
    Return 104
End Process

Process called "SYS_GETITIMER" returns Integer:
    Return 105
End Process

Process called "SYS_STAT" returns Integer:
    Return 106
End Process

Process called "SYS_LSTAT" returns Integer:
    Return 107
End Process

Process called "SYS_FSTAT" returns Integer:
    Return 108
End Process

Process called "SYS_VHANGUP" returns Integer:
    Return 111
End Process

Process called "SYS_WAIT4" returns Integer:
    Return 114
End Process

Process called "SYS_SYSINFO" returns Integer:
    Return 116
End Process

Process called "SYS_FSYNC" returns Integer:
    Return 118
End Process

Process called "SYS_CLONE" returns Integer:
    Return 120
End Process

Process called "SYS_SETDOMAINNAME" returns Integer:
    Return 121
End Process

Process called "SYS_UNAME" returns Integer:
    Return 122
End Process

Process called "SYS_MPROTECT" returns Integer:
    Return 125
End Process

Process called "SYS_INIT_MODULE" returns Integer:
    Return 128
End Process

Process called "SYS_DELETE_MODULE" returns Integer:
    Return 129
End Process

Process called "SYS_QUOTACTL" returns Integer:
    Return 131
End Process

Process called "SYS_GETPGID" returns Integer:
    Return 132
End Process

Process called "SYS_FCHDIR" returns Integer:
    Return 133
End Process

Process called "SYS_SYSFS" returns Integer:
    Return 135
End Process

Process called "SYS_PERSONALITY" returns Integer:
    Return 136
End Process

Process called "SYS_SETFSUID" returns Integer:
    Return 138
End Process

Process called "SYS_SETFSGID" returns Integer:
    Return 139
End Process

Process called "SYS__LLSEEK" returns Integer:
    Return 140
End Process

Process called "SYS_GETDENTS" returns Integer:
    Return 141
End Process

Process called "SYS__NEWSELECT" returns Integer:
    Return 142
End Process

Process called "SYS_FLOCK" returns Integer:
    Return 143
End Process

Process called "SYS_MSYNC" returns Integer:
    Return 144
End Process

Process called "SYS_READV" returns Integer:
    Return 145
End Process

Process called "SYS_WRITEV" returns Integer:
    Return 146
End Process

Process called "SYS_GETSID" returns Integer:
    Return 147
End Process

Process called "SYS_FDATASYNC" returns Integer:
    Return 148
End Process

Process called "SYS__SYSCTL" returns Integer:
    Return 149
End Process

Process called "SYS_MLOCK" returns Integer:
    Return 150
End Process

Process called "SYS_MUNLOCK" returns Integer:
    Return 151
End Process

Process called "SYS_MLOCKALL" returns Integer:
    Return 152
End Process

Process called "SYS_MUNLOCKALL" returns Integer:
    Return 153
End Process

Process called "SYS_SCHED_SETPARAM" returns Integer:
    Return 154
End Process

Process called "SYS_SCHED_GETPARAM" returns Integer:
    Return 155
End Process

Process called "SYS_SCHED_SETSCHEDULER" returns Integer:
    Return 156
End Process

Process called "SYS_SCHED_GETSCHEDULER" returns Integer:
    Return 157
End Process

Process called "SYS_SCHED_YIELD" returns Integer:
    Return 158
End Process

Process called "SYS_SCHED_GET_PRIORITY_MAX" returns Integer:
    Return 159
End Process

Process called "SYS_SCHED_GET_PRIORITY_MIN" returns Integer:
    Return 160
End Process

Process called "SYS_NANOSLEEP" returns Integer:
    Return 162
End Process

Process called "SYS_POLL" returns Integer:
    Return 168
End Process

Process called "SYS_PRCTL" returns Integer:
    Return 172
End Process

Process called "SYS_RT_SIGACTION" returns Integer:
    Return 174
End Process

Process called "SYS_RT_SIGPROCMASK" returns Integer:
    Return 175
End Process

Process called "SYS_RT_SIGPENDING" returns Integer:
    Return 176
End Process

Process called "SYS_RT_SIGTIMEDWAIT" returns Integer:
    Return 177
End Process

Process called "SYS_PREAD64" returns Integer:
    Return 180
End Process

Process called "SYS_PWRITE64" returns Integer:
    Return 181
End Process

Process called "SYS_CHOWN" returns Integer:
    Return 182
End Process

Process called "SYS_GETCWD" returns Integer:
    Return 183
End Process

Process called "SYS_CAPGET" returns Integer:
    Return 184
End Process

Process called "SYS_CAPSET" returns Integer:
    Return 185
End Process

Process called "SYS_SIGALTSTACK" returns Integer:
    Return 186
End Process

Process called "SYS_SENDFILE" returns Integer:
    Return 187
End Process

Process called "SYS_VFORK" returns Integer:
    Return 190
End Process

Process called "SYS_UGETRLIMIT" returns Integer:
    Return 191
End Process

Process called "SYS_MMAP2" returns Integer:
    Return 192
End Process

Process called "SYS_TRUNCATE64" returns Integer:
    Return 193
End Process

Process called "SYS_FTRUNCATE64" returns Integer:
    Return 194
End Process

Process called "SYS_STAT64" returns Integer:
    Return 195
End Process

Process called "SYS_LSTAT64" returns Integer:
    Return 196
End Process

Process called "SYS_FSTAT64" returns Integer:
    Return 197
End Process

Process called "SYS_GETUID32" returns Integer:
    Return 199
End Process

Process called "SYS_GETGID32" returns Integer:
    Return 200
End Process

Process called "SYS_GETEUID32" returns Integer:
    Return 201
End Process

Process called "SYS_GETEGID32" returns Integer:
    Return 202
End Process

Process called "SYS_SETREUID32" returns Integer:
    Return 203
End Process

Process called "SYS_SETREGID32" returns Integer:
    Return 204
End Process

Process called "SYS_GETGROUPS32" returns Integer:
    Return 205
End Process

Process called "SYS_SETGROUPS32" returns Integer:
    Return 206
End Process

Process called "SYS_FCHOWN32" returns Integer:
    Return 207
End Process

Process called "SYS_SETRESUID32" returns Integer:
    Return 208
End Process

Process called "SYS_GETRESUID32" returns Integer:
    Return 209
End Process

Process called "SYS_SETRESGID32" returns Integer:
    Return 210
End Process

Process called "SYS_GETRESGID32" returns Integer:
    Return 211
End Process

Process called "SYS_CHOWN32" returns Integer:
    Return 212
End Process

Process called "SYS_SETUID32" returns Integer:
    Return 213
End Process

Process called "SYS_SETGID32" returns Integer:
    Return 214
End Process

Process called "SYS_MINCORE" returns Integer:
    Return 219
End Process

Process called "SYS_MADVISE" returns Integer:
    Return 220
End Process

Process called "SYS_GETDENTS64" returns Integer:
    Return 217
End Process

Process called "SYS_FCNTL64" returns Integer:
    Return 221
End Process

Process called "SYS_GETTID" returns Integer:
    Return 224
End Process

Process called "SYS_TKILL" returns Integer:
    Return 238
End Process

Process called "SYS_FUTEX" returns Integer:
    Return 240
End Process

Process called "SYS_SCHED_SETAFFINITY" returns Integer:
    Return 241
End Process

Process called "SYS_SCHED_GETAFFINITY" returns Integer:
    Return 242
End Process

Process called "SYS_EXIT_GROUP" returns Integer:
    Return 248
End Process

Process called "SYS_EPOLL_CREATE" returns Integer:
    Return 250
End Process

Process called "SYS_EPOLL_CTL" returns Integer:
    Return 251
End Process

Process called "SYS_EPOLL_WAIT" returns Integer:
    Return 252
End Process

Process called "SYS_SET_TID_ADDRESS" returns Integer:
    Return 256
End Process

Process called "SYS_CLOCK_GETTIME" returns Integer:
    Return 263
End Process

Process called "SYS_CLOCK_GETRES" returns Integer:
    Return 264
End Process

Process called "SYS_CLOCK_NANOSLEEP" returns Integer:
    Return 265
End Process

Process called "SYS_TGKILL" returns Integer:
    Return 268
End Process

Process called "SYS_OPENAT" returns Integer:
    Return 322
End Process

Process called "SYS_MKDIRAT" returns Integer:
    Return 323
End Process

Process called "SYS_MKNODAT" returns Integer:
    Return 324
End Process

Process called "SYS_FCHOWNAT" returns Integer:
    Return 325
End Process

Process called "SYS_UNLINKAT" returns Integer:
    Return 328
End Process

Process called "SYS_RENAMEAT" returns Integer:
    Return 329
End Process

Process called "SYS_LINKAT" returns Integer:
    Return 330
End Process

Process called "SYS_SYMLINKAT" returns Integer:
    Return 331
End Process

Process called "SYS_READLINKAT" returns Integer:
    Return 332
End Process

Process called "SYS_FCHMODAT" returns Integer:
    Return 333
End Process

Process called "SYS_FACCESSAT" returns Integer:
    Return 334
End Process

Process called "SYS_PSELECT6" returns Integer:
    Return 335
End Process

Process called "SYS_PPOLL" returns Integer:
    Return 336
End Process

Process called "SYS_UNSHARE" returns Integer:
    Return 337
End Process

Process called "SYS_EVENTFD" returns Integer:
    Return 351
End Process

Process called "SYS_EVENTFD2" returns Integer:
    Return 356
End Process

Process called "SYS_DUP3" returns Integer:
    Return 358
End Process

Process called "SYS_PIPE2" returns Integer:
    Return 359
End Process

Process called "SYS_PREADV" returns Integer:
    Return 361
End Process

Process called "SYS_PWRITEV" returns Integer:
    Return 362
End Process

Note: ============================================================================
Note: FILE DESCRIPTOR CONSTANTS
Note: ============================================================================

Process called "STDIN_FILENO" returns Integer:
    Return 0
End Process

Process called "STDOUT_FILENO" returns Integer:
    Return 1
End Process

Process called "STDERR_FILENO" returns Integer:
    Return 2
End Process

Note: ============================================================================
Note: FILE OPEN FLAGS
Note: ============================================================================

Process called "O_RDONLY" returns Integer:
    Return 0  Note: Open for reading only
End Process

Process called "O_WRONLY" returns Integer:
    Return 1  Note: Open for writing only
End Process

Process called "O_RDWR" returns Integer:
    Return 2  Note: Open for reading and writing
End Process

Process called "O_CREAT" returns Integer:
    Return 64  Note: Create if nonexistent
End Process

Process called "O_EXCL" returns Integer:
    Return 128  Note: Error if already exists
End Process

Process called "O_NOCTTY" returns Integer:
    Return 256  Note: Don't assign controlling terminal
End Process

Process called "O_TRUNC" returns Integer:
    Return 512  Note: Truncate to zero length
End Process

Process called "O_APPEND" returns Integer:
    Return 1024  Note: Set append mode
End Process

Process called "O_NONBLOCK" returns Integer:
    Return 2048  Note: No delay
End Process

Process called "O_SYNC" returns Integer:
    Return 4096  Note: Synchronous writes
End Process

Process called "O_DIRECTORY" returns Integer:
    Return 16384  Note: Fail if not directory
End Process

Process called "O_NOFOLLOW" returns Integer:
    Return 32768  Note: Don't follow symlinks
End Process

Process called "O_CLOEXEC" returns Integer:
    Return 524288  Note: Close on exec
End Process

Note: ============================================================================
Note: MEMORY PROTECTION FLAGS
Note: ============================================================================

Process called "PROT_NONE" returns Integer:
    Return 0  Note: No access
End Process

Process called "PROT_READ" returns Integer:
    Return 1  Note: Pages can be read
End Process

Process called "PROT_WRITE" returns Integer:
    Return 2  Note: Pages can be written
End Process

Process called "PROT_EXEC" returns Integer:
    Return 4  Note: Pages can be executed
End Process

Note: ============================================================================
Note: MEMORY MAPPING FLAGS
Note: ============================================================================

Process called "MAP_SHARED" returns Integer:
    Return 1  Note: Share changes
End Process

Process called "MAP_PRIVATE" returns Integer:
    Return 2  Note: Changes are private
End Process

Process called "MAP_FIXED" returns Integer:
    Return 16  Note: Interpret addr exactly
End Process

Process called "MAP_ANONYMOUS" returns Integer:
    Return 32  Note: Anonymous memory (not file-backed)
End Process

Note: ============================================================================
Note: GENERIC SYSCALL WRAPPERS
Note: ============================================================================

Note: Linux ARM32 syscall convention:
Note: - R7 = syscall number
Note: - R0-R6 = arguments 1-7
Note: - Return value in R0

Process called "syscall_0" takes syscall_number as Integer returns Integer:
    Note: Linux ARM32 syscall with 0 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-8]
    End Assembly
    Return result
End Process

Process called "syscall_1" takes syscall_number as Integer, arg1 as Integer returns Integer:
    Note: Linux ARM32 syscall with 1 argument
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load argument 1 into R0
        ldr r0, [fp, #-8]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-12]
    End Assembly
    Return result
End Process

Process called "syscall_2" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer returns Integer:
    Note: Linux ARM32 syscall with 2 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load arguments 1-2 into R0-R1
        ldr r0, [fp, #-8]
        ldr r1, [fp, #-12]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-16]
    End Assembly
    Return result
End Process

Process called "syscall_3" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer returns Integer:
    Note: Linux ARM32 syscall with 3 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load arguments 1-3 into R0-R2
        ldr r0, [fp, #-8]
        ldr r1, [fp, #-12]
        ldr r2, [fp, #-16]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-20]
    End Assembly
    Return result
End Process

Process called "syscall_4" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer returns Integer:
    Note: Linux ARM32 syscall with 4 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load arguments 1-4 into R0-R3
        ldr r0, [fp, #-8]
        ldr r1, [fp, #-12]
        ldr r2, [fp, #-16]
        ldr r3, [fp, #-20]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-24]
    End Assembly
    Return result
End Process

Process called "syscall_5" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer, arg5 as Integer returns Integer:
    Note: Linux ARM32 syscall with 5 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load arguments 1-5 into R0-R4
        ldr r0, [fp, #-8]
        ldr r1, [fp, #-12]
        ldr r2, [fp, #-16]
        ldr r3, [fp, #-20]
        ldr r4, [fp, #-24]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-28]
    End Assembly
    Return result
End Process

Process called "syscall_6" takes syscall_number as Integer, arg1 as Integer, arg2 as Integer, arg3 as Integer, arg4 as Integer, arg5 as Integer, arg6 as Integer returns Integer:
    Note: Linux ARM32 syscall with 6 arguments
    Let result be 0
    Inline Assembly:
        // Load syscall number into R7
        ldr r7, [fp, #-4]

        // Load arguments 1-6 into R0-R5
        ldr r0, [fp, #-8]
        ldr r1, [fp, #-12]
        ldr r2, [fp, #-16]
        ldr r3, [fp, #-20]
        ldr r4, [fp, #-24]
        ldr r5, [fp, #-28]

        // Execute syscall
        swi #0

        // Store result from R0
        str r0, [fp, #-32]
    End Assembly
    Return result
End Process

Note: ============================================================================
Note: HIGH-LEVEL SYSCALL WRAPPERS
Note: ============================================================================

Process called "exit" takes status as Integer returns Integer:
    Note: Exit the current process
    Return syscall_1(SYS_EXIT(), status)
End Process

Process called "read" takes fd as Integer, buffer as Integer, count as Integer returns Integer:
    Note: Read from file descriptor
    Return syscall_3(SYS_READ(), fd, buffer, count)
End Process

Process called "write" takes fd as Integer, buffer as Integer, count as Integer returns Integer:
    Note: Write to file descriptor
    Return syscall_3(SYS_WRITE(), fd, buffer, count)
End Process

Process called "open" takes path as Integer, flags as Integer, mode as Integer returns Integer:
    Note: Open file
    Return syscall_3(SYS_OPEN(), path, flags, mode)
End Process

Process called "close" takes fd as Integer returns Integer:
    Note: Close file descriptor
    Return syscall_1(SYS_CLOSE(), fd)
End Process

Process called "mmap2" takes addr as Integer, length as Integer, prot as Integer, flags as Integer, fd as Integer, pgoffset as Integer returns Integer:
    Note: Map memory (ARM32 uses mmap2 with page offset)
    Return syscall_6(SYS_MMAP2(), addr, length, prot, flags, fd, pgoffset)
End Process

Process called "munmap" takes addr as Integer, length as Integer returns Integer:
    Note: Unmap memory
    Return syscall_2(SYS_MUNMAP(), addr, length)
End Process

Process called "mprotect" takes addr as Integer, length as Integer, prot as Integer returns Integer:
    Note: Change memory protection
    Return syscall_3(SYS_MPROTECT(), addr, length, prot)
End Process

Process called "getpid" returns Integer:
    Note: Get process ID
    Return syscall_0(SYS_GETPID())
End Process

Process called "fork" returns Integer:
    Note: Create child process
    Return syscall_0(SYS_FORK())
End Process

Process called "execve" takes path as Integer, argv as Integer, envp as Integer returns Integer:
    Note: Execute program
    Return syscall_3(SYS_EXECVE(), path, argv, envp)
End Process

Process called "wait4" takes pid as Integer, status as Integer, options as Integer, rusage as Integer returns Integer:
    Note: Wait for process to change state
    Return syscall_4(SYS_WAIT4(), pid, status, options, rusage)
End Process

Process called "kill" takes pid as Integer, sig as Integer returns Integer:
    Note: Send signal to process
    Return syscall_2(SYS_KILL(), pid, sig)
End Process

Process called "getuid" returns Integer:
    Note: Get user ID (32-bit version)
    Return syscall_0(SYS_GETUID32())
End Process

Process called "geteuid" returns Integer:
    Note: Get effective user ID (32-bit version)
    Return syscall_0(SYS_GETEUID32())
End Process

Process called "getgid" returns Integer:
    Note: Get group ID (32-bit version)
    Return syscall_0(SYS_GETGID32())
End Process

Process called "getegid" returns Integer:
    Note: Get effective group ID (32-bit version)
    Return syscall_0(SYS_GETEGID32())
End Process

Process called "dup" takes fd as Integer returns Integer:
    Note: Duplicate file descriptor
    Return syscall_1(SYS_DUP(), fd)
End Process

Process called "dup2" takes oldfd as Integer, newfd as Integer returns Integer:
    Note: Duplicate file descriptor to specific fd
    Return syscall_2(SYS_DUP2(), oldfd, newfd)
End Process

Process called "pipe" takes pipefd as Integer returns Integer:
    Note: Create pipe
    Return syscall_1(SYS_PIPE(), pipefd)
End Process

Process called "ioctl" takes fd as Integer, request as Integer, arg as Integer returns Integer:
    Note: Device-specific input/output operations
    Return syscall_3(SYS_IOCTL(), fd, request, arg)
End Process

Process called "fcntl" takes fd as Integer, cmd as Integer, arg as Integer returns Integer:
    Note: File control operations
    Return syscall_3(SYS_FCNTL(), fd, cmd, arg)
End Process

Process called "lseek" takes fd as Integer, offset as Integer, whence as Integer returns Integer:
    Note: Reposition file offset
    Return syscall_3(SYS_LSEEK(), fd, offset, whence)
End Process

Process called "ftruncate" takes fd as Integer, length as Integer returns Integer:
    Note: Truncate file to specified length
    Return syscall_2(SYS_FTRUNCATE(), fd, length)
End Process

Process called "fsync" takes fd as Integer returns Integer:
    Note: Synchronize file's in-core state with storage
    Return syscall_1(SYS_FSYNC(), fd)
End Process

Process called "chmod" takes path as Integer, mode as Integer returns Integer:
    Note: Change file mode
    Return syscall_2(SYS_CHMOD(), path, mode)
End Process

Process called "fchmod" takes fd as Integer, mode as Integer returns Integer:
    Note: Change file mode
    Return syscall_2(SYS_FCHMOD(), fd, mode)
End Process

Process called "chown" takes path as Integer, owner as Integer, group as Integer returns Integer:
    Note: Change file owner and group (32-bit version)
    Return syscall_3(SYS_CHOWN32(), path, owner, group)
End Process

Process called "fchown" takes fd as Integer, owner as Integer, group as Integer returns Integer:
    Note: Change file owner and group (32-bit version)
    Return syscall_3(SYS_FCHOWN32(), fd, owner, group)
End Process

Process called "mkdir" takes path as Integer, mode as Integer returns Integer:
    Note: Create directory
    Return syscall_2(SYS_MKDIR(), path, mode)
End Process

Process called "rmdir" takes path as Integer returns Integer:
    Note: Remove directory
    Return syscall_1(SYS_RMDIR(), path)
End Process

Process called "unlink" takes path as Integer returns Integer:
    Note: Delete file
    Return syscall_1(SYS_UNLINK(), path)
End Process

Process called "rename" takes oldpath as Integer, newpath as Integer returns Integer:
    Note: Rename file
    Return syscall_2(SYS_RENAME(), oldpath, newpath)
End Process

Process called "link" takes oldpath as Integer, newpath as Integer returns Integer:
    Note: Create hard link
    Return syscall_2(SYS_LINK(), oldpath, newpath)
End Process

Process called "symlink" takes target as Integer, linkpath as Integer returns Integer:
    Note: Create symbolic link
    Return syscall_2(SYS_SYMLINK(), target, linkpath)
End Process

Process called "readlink" takes path as Integer, buf as Integer, bufsiz as Integer returns Integer:
    Note: Read symbolic link
    Return syscall_3(SYS_READLINK(), path, buf, bufsiz)
End Process

Process called "chdir" takes path as Integer returns Integer:
    Note: Change working directory
    Return syscall_1(SYS_CHDIR(), path)
End Process

Process called "fchdir" takes fd as Integer returns Integer:
    Note: Change working directory to fd
    Return syscall_1(SYS_FCHDIR(), fd)
End Process

Process called "nanosleep" takes req as Integer, rem as Integer returns Integer:
    Note: Sleep for specified time
    Return syscall_2(SYS_NANOSLEEP(), req, rem)
End Process

Process called "clock_gettime" takes clk_id as Integer, tp as Integer returns Integer:
    Note: Get clock time
    Return syscall_2(SYS_CLOCK_GETTIME(), clk_id, tp)
End Process

Process called "poll" takes fds as Integer, nfds as Integer, timeout as Integer returns Integer:
    Note: Wait for events on file descriptors
    Return syscall_3(SYS_POLL(), fds, nfds, timeout)
End Process
