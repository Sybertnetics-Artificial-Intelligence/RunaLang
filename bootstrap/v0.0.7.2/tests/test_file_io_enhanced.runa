Process called "main" takes argc as Integer, argv as Integer returns Integer:
    Print "Testing Enhanced File I/O Operations\n"

    # Test file_exists
    Print "\n=== Testing file_exists ==="
    Let test_file be "test_output.txt"

    Print "\nChecking if test_output.txt exists: "
    If file_exists(test_file) is equal to 1:
        Print "exists\n"
    Otherwise:
        Print "does not exist\n"
    End If

    # Test file_open for writing
    Print "\n=== Testing file_open for writing ==="
    Let handle be file_open(test_file, "w")
    If handle is less than 0:
        Print "\nError: Could not open file for writing\n"
        Return 1
    End If
    Print "\nOpened file for writing, handle: "
    Print integer_to_string(handle)
    Print "\n"

    # Test file_write_line
    Print "\n=== Testing file_write_line ==="
    Let result be file_write_line(handle, "First line of text")
    If result is not equal to 0:
        Print "\nError writing line 1\n"
    End If

    Set result to file_write_line(handle, "Second line of text")
    If result is not equal to 0:
        Print "\nError writing line 2\n"
    End If

    Set result to file_write_line(handle, "Third line of text")
    If result is not equal to 0:
        Print "\nError writing line 3\n"
    End If
    Print "\nWrote 3 lines to file\n"

    # Test file_close
    Print "\n=== Testing file_close ==="
    Set result to file_close(handle)
    If result is not equal to 0:
        Print "\nError closing file\n"
    End If
    Print "\nClosed file successfully\n"

    # Test file_size
    Print "\n=== Testing file_size ==="
    Let size be file_size(test_file)
    Print "\nFile size: "
    Print integer_to_string(size)
    Print " bytes\n"

    # Test file_open for reading
    Print "\n=== Testing file_open for reading ==="
    Set handle to file_open(test_file, "r")
    If handle is less than 0:
        Print "\nError: Could not open file for reading\n"
        Return 1
    End If
    Print "\nOpened file for reading\n"

    # Test file_read_line
    Print "\n=== Testing file_read_line ==="
    Let line1 be file_read_line(handle)
    Print "\nLine 1: "
    Print line1
    Print "\n"

    Let line2 be file_read_line(handle)
    Print "Line 2: "
    Print line2
    Print "\n"

    # Test file_tell
    Print "\n=== Testing file_tell ==="
    Let position be file_tell(handle)
    Print "\nCurrent file position: "
    Print integer_to_string(position)
    Print "\n"

    # Test file_seek
    Print "\n=== Testing file_seek ==="
    Set result to file_seek(handle, 0, 0)
    If result is equal to 0:
        Print "\nSeeked to beginning of file\n"
    End If

    Let first_line_again be file_read_line(handle)
    Print "First line again: "
    Print first_line_again
    Print "\n"

    # Test file_eof
    Print "\n=== Testing file_eof ==="
    While file_eof(handle) is equal to 0:
        Let next_line be file_read_line(handle)
        If next_line is not equal to 0:
            Print "Read: "
            Print next_line
            Print "\n"
        End If
    End While
    Print "Reached end of file\n"

    # Close the file
    Set result to file_close(handle)

    # Test file_open for append
    Print "\n=== Testing file_open for append ==="
    Set handle to file_open(test_file, "a")
    If handle is less than 0:
        Print "\nError: Could not open file for append\n"
        Return 1
    End If

    Set result to file_write_line(handle, "Fourth line appended")
    Print "\nAppended a line to the file\n"
    Set result to file_close(handle)

    # Test file_delete
    Print "\n=== Testing file_delete ==="
    Let temp_file be "temp_test.txt"
    Set handle to file_open(temp_file, "w")
    Set result to file_write_line(handle, "Temporary file content")
    Set result to file_close(handle)

    Print "\nCreated temp file, now deleting..."
    Set result to file_delete(temp_file)
    If result is equal to 0:
        Print " deleted successfully\n"
    Otherwise:
        Print " failed to delete\n"
    End If

    # Verify deletion
    If file_exists(temp_file) is equal to 0:
        Print "Verified: temp file no longer exists\n"
    Otherwise:
        Print "Error: temp file still exists\n"
    End If

    Print "\n=== All Enhanced File I/O Tests Complete ===\n"
    Return 0
End Process