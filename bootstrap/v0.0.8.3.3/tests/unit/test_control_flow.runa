Note: Test control flow: If/Otherwise If/Otherwise/End If, While/End While
Note: Comprehensive Otherwise If edge cases

Process called "test_simple_otherwise_if" takes value as Integer returns Integer:
    Note: Edge case 1: Simple Otherwise If chain (2 conditions)
    Let result be 0
    If value is equal to 1:
        Set result to 100
    Otherwise If value is equal to 2:
        Set result to 200
    Otherwise:
        Set result to 999
    End If
    Return result
End Process

Process called "test_multi_otherwise_if" takes value as Integer returns Integer:
    Note: Edge case 2: Multiple Otherwise If (5 conditions)
    Let result be 0
    If value is equal to 1:
        Set result to 10
    Otherwise If value is equal to 2:
        Set result to 20
    Otherwise If value is equal to 3:
        Set result to 30
    Otherwise If value is equal to 4:
        Set result to 40
    Otherwise If value is equal to 5:
        Set result to 50
    Otherwise:
        Set result to 0
    End If
    Return result
End Process

Process called "test_nested_otherwise_if" takes x as Integer, y as Integer returns Integer:
    Note: Edge case 3: Nested Otherwise If statements
    Let result be 0
    If x is equal to 1:
        If y is equal to 1:
            Set result to 11
        Otherwise If y is equal to 2:
            Set result to 12
        Otherwise:
            Set result to 10
        End If
    Otherwise If x is equal to 2:
        If y is equal to 1:
            Set result to 21
        Otherwise If y is equal to 2:
            Set result to 22
        Otherwise:
            Set result to 20
        End If
    Otherwise:
        If y is equal to 1:
            Set result to 91
        Otherwise If y is equal to 2:
            Set result to 92
        Otherwise:
            Set result to 99
        End If
    End If
    Return result
End Process

Process called "test_complex_conditions" takes value as Integer returns Integer:
    Note: Edge case 4: Otherwise If with complex boolean conditions
    Let result be 0
    If value is less than 10:
        Set result to 1
    Otherwise If value is greater than or equal to 10:
        If value is less than 20:
            Set result to 2
        Otherwise If value is less than 30:
            Set result to 3
        Otherwise:
            Set result to 4
        End If
    Otherwise:
        Set result to 0
    End If
    Return result
End Process

Process called "test_no_otherwise" takes value as Integer returns Integer:
    Note: Edge case 5: Otherwise If chain without final Otherwise
    Let result be 99
    If value is equal to 1:
        Set result to 10
    Otherwise If value is equal to 2:
        Set result to 20
    Otherwise If value is equal to 3:
        Set result to 30
    End If
    Return result
End Process

Process called "main" returns Integer:
    Let x be 10
    Let result be 0
    Let test_val be 0

    Note: Test basic If/Otherwise/End If
    If x is equal to 10:
        Display "PASS: If condition true"
    Otherwise:
        Display "FAIL: If condition true"
    End If

    If x is equal to 5:
        Display "FAIL: If condition false"
    Otherwise:
        Display "PASS: If condition false"
    End If

    Note: Test edge case 1: Simple Otherwise If (2 conditions)
    Set test_val to 1
    Set result to test_simple_otherwise_if(test_val)
    If result is equal to 100:
        Display "PASS: Simple Otherwise If - first condition (got 100)"
    Otherwise:
        Display "FAIL: Simple Otherwise If - first condition (expected 100)"
    End If

    Set test_val to 2
    Set result to test_simple_otherwise_if(test_val)
    If result is equal to 200:
        Display "PASS: Simple Otherwise If - second condition (got 200)"
    Otherwise:
        Display "FAIL: Simple Otherwise If - second condition (expected 200)"
    End If

    Set test_val to 99
    Set result to test_simple_otherwise_if(test_val)
    If result is equal to 999:
        Display "PASS: Simple Otherwise If - default Otherwise (got 999)"
    Otherwise:
        Display "FAIL: Simple Otherwise If - default Otherwise (expected 999)"
    End If

    Note: Test edge case 2: Multiple Otherwise If (5 conditions)
    Set result to test_multi_otherwise_if(1)
    If result is equal to 10:
        Display "PASS: Multi Otherwise If - condition 1"
    Otherwise:
        Display "FAIL: Multi Otherwise If - condition 1"
    End If

    Set result to test_multi_otherwise_if(3)
    If result is equal to 30:
        Display "PASS: Multi Otherwise If - condition 3"
    Otherwise:
        Display "FAIL: Multi Otherwise If - condition 3"
    End If

    Set result to test_multi_otherwise_if(5)
    If result is equal to 50:
        Display "PASS: Multi Otherwise If - condition 5"
    Otherwise:
        Display "FAIL: Multi Otherwise If - condition 5"
    End If

    Set result to test_multi_otherwise_if(99)
    If result is equal to 0:
        Display "PASS: Multi Otherwise If - default Otherwise"
    Otherwise:
        Display "FAIL: Multi Otherwise If - default Otherwise"
    End If

    Note: Test edge case 3: Nested Otherwise If
    Set result to test_nested_otherwise_if(1, 1)
    If result is equal to 11:
        Display "PASS: Nested Otherwise If - (1,1)"
    Otherwise:
        Display "FAIL: Nested Otherwise If - (1,1)"
    End If

    Set result to test_nested_otherwise_if(1, 2)
    If result is equal to 12:
        Display "PASS: Nested Otherwise If - (1,2)"
    Otherwise:
        Display "FAIL: Nested Otherwise If - (1,2)"
    End If

    Set result to test_nested_otherwise_if(2, 1)
    If result is equal to 21:
        Display "PASS: Nested Otherwise If - (2,1)"
    Otherwise:
        Display "FAIL: Nested Otherwise If - (2,1)"
    End If

    Set result to test_nested_otherwise_if(2, 2)
    If result is equal to 22:
        Display "PASS: Nested Otherwise If - (2,2)"
    Otherwise:
        Display "FAIL: Nested Otherwise If - (2,2)"
    End If

    Set result to test_nested_otherwise_if(9, 9)
    If result is equal to 99:
        Display "PASS: Nested Otherwise If - (9,9) default"
    Otherwise:
        Display "FAIL: Nested Otherwise If - (9,9) default"
    End If

    Note: Test edge case 4: Complex boolean conditions
    Set result to test_complex_conditions(5)
    If result is equal to 1:
        Display "PASS: Complex conditions - less than 10"
    Otherwise:
        Display "FAIL: Complex conditions - less than 10"
    End If

    Set result to test_complex_conditions(15)
    If result is equal to 2:
        Display "PASS: Complex conditions - 10-19"
    Otherwise:
        Display "FAIL: Complex conditions - 10-19"
    End If

    Set result to test_complex_conditions(25)
    If result is equal to 3:
        Display "PASS: Complex conditions - 20-29"
    Otherwise:
        Display "FAIL: Complex conditions - 20-29"
    End If

    Set result to test_complex_conditions(35)
    If result is equal to 4:
        Display "PASS: Complex conditions - 30+"
    Otherwise:
        Display "FAIL: Complex conditions - 30+"
    End If

    Note: Test edge case 5: No final Otherwise
    Set result to test_no_otherwise(1)
    If result is equal to 10:
        Display "PASS: No Otherwise - condition 1"
    Otherwise:
        Display "FAIL: No Otherwise - condition 1"
    End If

    Set result to test_no_otherwise(2)
    If result is equal to 20:
        Display "PASS: No Otherwise - condition 2"
    Otherwise:
        Display "FAIL: No Otherwise - condition 2"
    End If

    Set result to test_no_otherwise(99)
    If result is equal to 99:
        Display "PASS: No Otherwise - fall through"
    Otherwise:
        Display "FAIL: No Otherwise - fall through"
    End If

    Note: Test While/End While
    Let counter be 0
    Let sum be 0
    While counter is less than 5:
        Set sum to sum plus counter
        Set counter to counter plus 1
    End While

    If sum is equal to 10:
        Display "PASS: While loop sum"
    Otherwise:
        Display "FAIL: While loop sum"
    End If

    Return 0
End Process
