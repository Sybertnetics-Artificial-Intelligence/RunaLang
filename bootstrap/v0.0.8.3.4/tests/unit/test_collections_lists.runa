Note: Test list literals and operations
Process called "main" returns Integer:
    Note: Test 1: Basic list literal
    Let nums be list containing 1, 2, 3, 4, 5
    Let len be list_length(nums)
    If len is not equal to 5:
        print_string("FAIL: list_length")
        Return 1
    End If

    Note: Test 2: "a list containing" syntax
    Let values be a list containing 10, 20, 30
    Let sum be 0
    For each v in values:
        Set sum to sum plus v
    End For
    If sum is not equal to 60:
        print_string("FAIL: a list containing")
        Return 1
    End If

    Note: Test 3: list_get
    Let item be list_get(nums, 2)
    If item is not equal to 3:
        print_string("FAIL: list_get")
        Return 1
    End If

    Note: Test 4: list_set
    list_set(nums, 0, 100)
    Let first be list_get(nums, 0)
    If first is not equal to 100:
        print_string("FAIL: list_set")
        Return 1
    End If

    Note: Test 5: list_append
    Let mylist be list_create()
    list_append(mylist, 7)
    list_append(mylist, 8)
    Let size be list_length(mylist)
    If size is not equal to 2:
        print_string("FAIL: list_append")
        Return 1
    End If

    Note: Test 6: list_insert
    list_insert(mylist, 1, 99)
    Let inserted be list_get(mylist, 1)
    If inserted is not equal to 99:
        print_string("FAIL: list_insert")
        Return 1
    End If

    Note: Test 7: list_remove
    Let removed be list_remove(mylist, 1)
    If removed is not equal to 99:
        print_string("FAIL: list_remove")
        Return 1
    End If

    Note: Test 8: Context-aware "list" as variable
    Let list be 42
    If list is not equal to 42:
        print_string("FAIL: list as variable")
        Return 1
    End If

    print_string("PASS: All list tests")
    Return 0
End Process
