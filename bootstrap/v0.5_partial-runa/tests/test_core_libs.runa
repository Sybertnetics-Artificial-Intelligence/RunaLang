Note: For bootstrap phase, we'll define simple test functions without imports

External Process called "rust_print_string" that takes text as String returns Nothing

Process called "print_string" that takes text as String returns Nothing:
    rust_print_string(text)
End Process

Process called "test_strings":
    Note: Test string operations
    
    Let original be "Hello"
    print_string("Testing basic string: ")
    print_string(original)
    print_string("\n")
    
    Let left be "Hello "
    Let right be "World"
    Let combined be Core.string_concat(left, right)
    Core.print_string("Testing string_concat: ")
    Core.print_string(combined)
    Core.print_string("\n")
End Process

Process called "test_arrays":
    Note: Test array operations
    
    Let arr be Core.array_new(8, 10)
    Core.print_string("Testing array creation\n")
    
    Core.array_push(arr, 42)
    Core.array_push(arr, 100)
    Core.array_push(arr, 200)
    
    Core.print_string("Testing array_get index 0: ")
    Let first be Core.array_get(arr, 0)
    Core.print_string("Got value\n")
    
    Core.print_string("Testing array_get index 1: ")
    Let second be Core.array_get(arr, 1)
    Core.print_string("Got value\n")
End Process

Process called "test_memory":
    Note: Test memory operations
    
    Core.print_string("Testing memory allocation\n")
    Let ptr be Core.memory_allocate(100)
    
    If ptr.address is greater than 0:
        Core.print_string("Memory allocated successfully\n")
        Core.memory_free(ptr)
        Core.print_string("Memory freed successfully\n")
    Otherwise:
        Core.print_string("Memory allocation failed\n")
    End If
End Process

Process called "test_io":
    Note: Test I/O operations
    
    Core.print_string("Testing print_string\n")
    Core.print_string("Enter your name: ")
    Let name be Core.read_line()
    Core.print_string("Hello, ")
    Core.print_string(name)
    Core.print_string("!\n")
End Process

Process called "test_utilities":
    Note: Test utility functions
    
    Core.print_string("Testing utility functions\n")
    
    Let list be Core.empty_list()
    Core.print_string("Created empty list\n")
    
    Let dict be Core.create_dictionary()
    Core.print_string("Created dictionary\n")
    
    Let bytes be Core.create_byte_array(256)
    Core.print_string("Created byte array\n")
    
    Let stream be Core.create_stream(1, "write")
    Core.print_string("Created stream\n")
End Process

Process called "main":
    Note: Main test driver
    
    Core.print_string("=== Testing Core Libraries ===\n\n")
    
    Core.print_string("1. String Operations\n")
    test_strings()
    Core.print_string("\n")
    
    Core.print_string("2. Array Operations\n")
    test_arrays()
    Core.print_string("\n")
    
    Core.print_string("3. Memory Management\n")
    test_memory()
    Core.print_string("\n")
    
    Core.print_string("4. I/O Operations\n")
    test_io()
    Core.print_string("\n")
    
    Core.print_string("5. Utility Functions\n")
    test_utilities()
    Core.print_string("\n")
    
    Core.print_string("=== All Tests Complete ===\n")
End Process