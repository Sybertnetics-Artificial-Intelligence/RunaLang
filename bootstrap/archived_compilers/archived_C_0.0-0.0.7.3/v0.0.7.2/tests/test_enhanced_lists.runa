Process called "main" returns Integer:
    Print "Testing Enhanced List Operations\n"

    Let my_list be list_create()
    list_append(my_list, 10)
    list_append(my_list, 20)
    list_append(my_list, 30)
    list_append(my_list, 40)
    list_append(my_list, 50)

    Print "\n=== Testing list_set ==="
    Print "\nOriginal list[2]: "
    Print integer_to_string(list_get(my_list, 2))
    Print "\n"

    list_set(my_list, 2, 99)
    Print "After list_set(2, 99): "
    Print integer_to_string(list_get(my_list, 2))
    Print "\n"

    Print "\n=== Testing list_insert ==="
    Print "\nBefore insert, length: "
    Print integer_to_string(list_length(my_list))
    Print "\n"

    list_insert(my_list, 0, 5)
    Print "After insert(0, 5), first element: "
    Print integer_to_string(list_get(my_list, 0))
    Print "\n"

    list_insert(my_list, 3, 15)
    Print "After insert(3, 15), element[3]: "
    Print integer_to_string(list_get(my_list, 3))
    Print "\n"

    Print "\n=== Testing list_remove ==="
    Print "\nBefore remove, length: "
    Print integer_to_string(list_length(my_list))
    Print "\n"

    Let removed be list_remove(my_list, 3)
    Print "Removed element at index 3: "
    Print integer_to_string(removed)
    Print "\n"

    Print "\n=== Testing list_find ==="
    Print "Searching for value 20: index "
    Print integer_to_string(list_find(my_list, 20))
    Print "\n"
    Print "Searching for value 999: index "
    Print integer_to_string(list_find(my_list, 999))
    Print " (should be -1)\n"

    Print "\n=== Testing list_sort ==="
    list_append(my_list, 3)
    list_append(my_list, 77)
    list_append(my_list, 12)

    Print "Before sort: "
    Let i be 0
    While i is less than list_length(my_list):
        Print integer_to_string(list_get(my_list, i))
        Print " "
        Set i to i plus 1
    End While
    Print "\n"

    list_sort(my_list)
    Print "After sort: "
    Set i to 0
    While i is less than list_length(my_list):
        Print integer_to_string(list_get(my_list, i))
        Print " "
        Set i to i plus 1
    End While
    Print "\n"

    Print "\n=== Testing list_reverse ==="
    list_reverse(my_list)
    Print "After reverse: "
    Set i to 0
    While i is less than list_length(my_list):
        Print integer_to_string(list_get(my_list, i))
        Print " "
        Set i to i plus 1
    End While
    Print "\n"

    Print "\n=== Testing list_copy ==="
    Let copy_list be list_copy(my_list)
    Print "Original list length: "
    Print integer_to_string(list_length(my_list))
    Print "\n"
    Print "Copy list length: "
    Print integer_to_string(list_length(copy_list))
    Print "\n"

    list_set(copy_list, 0, 999)
    Print "After modifying copy[0] to 999:\n"
    Print "Original[0]: "
    Print integer_to_string(list_get(my_list, 0))
    Print "\n"
    Print "Copy[0]: "
    Print integer_to_string(list_get(copy_list, 0))
    Print "\n"

    Print "\n=== Testing list_merge ==="
    Let list2 be list_create()
    list_append(list2, 100)
    list_append(list2, 200)
    list_append(list2, 300)

    Let merged be list_merge(my_list, list2)
    Print "Merged list (length "
    Print integer_to_string(list_length(merged))
    Print "): "
    Set i to 0
    While i is less than list_length(merged):
        Print integer_to_string(list_get(merged, i))
        Print " "
        Set i to i plus 1
    End While
    Print "\n"

    Print "\n=== Testing list_clear ==="
    Print "Before clear, list2 length: "
    Print integer_to_string(list_length(list2))
    Print "\n"

    list_clear(list2)
    Print "After clear, list2 length: "
    Print integer_to_string(list_length(list2))
    Print "\n"

    list_destroy(my_list)
    list_destroy(copy_list)
    list_destroy(list2)
    list_destroy(merged)

    Print "\n=== All Enhanced List Tests Complete ===\n"
    Return 0
End Process