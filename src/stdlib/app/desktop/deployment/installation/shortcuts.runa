Note:
app/desktop/deployment/installation/shortcuts.runa
Shortcut Creation and Management

This module provides shortcut creation functionality including:
- Desktop shortcuts
- Start menu entries
- Quick launch shortcuts
- Taskbar pinning
- File associations
- Context menu integration
- Protocol handlers
- Jump lists
- System tray icons
- Dock integration (macOS)
:End Note

Import "dev/debug/errors/core" as Errors

Note: =====================================================================
Note: SHORTCUT DATA STRUCTURES
Note: =====================================================================

Type called "Shortcut":
    shortcut_id as String
    name as String
    target_path as String
    arguments as String
    working_directory as String
    icon_path as String
    icon_index as Integer
    description as String
    hotkey as Optional[String]
    window_state as String
    run_as_admin as Boolean
    categories as List[String]

Type called "DesktopShortcut":
    shortcut as Shortcut
    location as String
    user_specific as Boolean
    position as Optional[Tuple[Integer, Integer]]

Type called "StartMenuEntry":
    shortcut as Shortcut
    folder_path as String
    all_users as Boolean
    pin_to_start as Boolean
    tile_size as String
    live_tile as Optional[LiveTileConfig]

Type called "LiveTileConfig":
    template as String
    update_url as String
    update_interval as Integer
    notifications as Boolean

Type called "TaskbarShortcut":
    shortcut as Shortcut
    pinned as Boolean
    position as Optional[Integer]
    jump_list as Optional[JumpList]
    overlay_icon as Optional[String]
    progress_state as Optional[String]

Type called "JumpList":
    app_id as String
    categories as List[JumpListCategory]
    recent_documents as Boolean
    frequent_documents as Boolean
    custom_tasks as List[JumpListTask]

Type called "JumpListCategory":
    name as String
    items as List[JumpListItem]
    visible as Boolean

Type called "JumpListItem":
    title as String
    path as String
    arguments as String
    icon as Optional[String]
    description as String

Type called "JumpListTask":
    title as String
    program as String
    arguments as String
    icon as Optional[String]
    separator_before as Boolean

Type called "FileAssociation":
    extension as String
    prog_id as String
    description as String
    icon as String
    executable as String
    command as String
    mime_type as Optional[String]
    perceived_type as Optional[String]

Type called "ContextMenuItem":
    id as String
    text as String
    command as String
    icon as Optional[String]
    position as Optional[Integer]
    parent_menu as Optional[String]
    file_types as List[String]
    extended_menu as Boolean

Type called "ProtocolHandler":
    protocol as String
    name as String
    executable as String
    command_template as String
    icon as String
    default_handler as Boolean

Type called "SystemTrayIcon":
    icon_path as String
    tooltip as String
    menu as List[TrayMenuItem]
    balloon_tip as Optional[BalloonTip]
    visible as Boolean
    click_action as String

Type called "TrayMenuItem":
    id as String
    text as String
    action as String
    icon as Optional[String]
    checked as Boolean
    enabled as Boolean
    separator as Boolean

Type called "BalloonTip":
    title as String
    text as String
    icon as String
    timeout as Integer

Type called "DockItem":
    app_path as String
    position as Integer
    badge_text as Optional[String]
    bounce_on_notification as Boolean
    menu_items as List[DockMenuItem]

Type called "DockMenuItem":
    title as String
    action as String
    key_equivalent as Optional[String]

Note: =====================================================================
Note: DESKTOP SHORTCUTS
Note: =====================================================================

Process called "create_desktop_shortcut" that takes shortcut as DesktopShortcut returns Nothing:
    Note: Creates desktop shortcut
    Placeholder

Process called "remove_desktop_shortcut" that takes shortcut_name as String returns Nothing:
    Note: Removes desktop shortcut
    Placeholder

Process called "get_desktop_path" that takes all_users as Boolean returns String:
    Note: Gets desktop path
    Placeholder

Process called "arrange_desktop_icons" that takes layout as String returns Nothing:
    Note: Arranges icons
    Placeholder

Process called "set_shortcut_position" that takes shortcut_name as String, position as Tuple[Integer, Integer] returns Nothing:
    Note: Sets position
    Placeholder

Note: =====================================================================
Note: START MENU
Note: =====================================================================

Process called "create_start_menu_entry" that takes entry as StartMenuEntry returns Nothing:
    Note: Creates start menu entry
    Placeholder

Process called "create_start_menu_folder" that takes folder_name as String, all_users as Boolean returns String:
    Note: Creates folder
    Placeholder

Process called "pin_to_start" that takes shortcut_path as String returns Nothing:
    Note: Pins to start
    Placeholder

Process called "unpin_from_start" that takes shortcut_path as String returns Nothing:
    Note: Unpins from start
    Placeholder

Process called "configure_live_tile" that takes shortcut_path as String, config as LiveTileConfig returns Nothing:
    Note: Configures live tile
    Placeholder

Process called "get_start_menu_path" that takes all_users as Boolean returns String:
    Note: Gets start menu path
    Placeholder

Note: =====================================================================
Note: TASKBAR
Note: =====================================================================

Process called "pin_to_taskbar" that takes shortcut as TaskbarShortcut returns Nothing:
    Note: Pins to taskbar
    Placeholder

Process called "unpin_from_taskbar" that takes app_path as String returns Nothing:
    Note: Unpins from taskbar
    Placeholder

Process called "set_taskbar_position" that takes app_path as String, position as Integer returns Nothing:
    Note: Sets taskbar position
    Placeholder

Process called "create_jump_list" that takes jump_list as JumpList returns Nothing:
    Note: Creates jump list
    Placeholder

Process called "update_jump_list" that takes app_id as String, updates as JumpList returns Nothing:
    Note: Updates jump list
    Placeholder

Process called "set_overlay_icon" that takes app_path as String, icon_path as String returns Nothing:
    Note: Sets overlay icon
    Placeholder

Note: =====================================================================
Note: FILE ASSOCIATIONS
Note: =====================================================================

Process called "register_file_association" that takes association as FileAssociation returns Nothing:
    Note: Registers association
    Placeholder

Process called "unregister_file_association" that takes extension as String returns Nothing:
    Note: Unregisters association
    Placeholder

Process called "set_default_program" that takes extension as String, prog_id as String returns Nothing:
    Note: Sets default program
    Placeholder

Process called "get_file_associations" that takes extension as String returns List[FileAssociation]:
    Note: Gets associations
    Placeholder

Process called "refresh_file_associations" that takes nothing returns Nothing:
    Note: Refreshes associations
    Placeholder

Note: =====================================================================
Note: CONTEXT MENU
Note: =====================================================================

Process called "add_context_menu_item" that takes item as ContextMenuItem returns Nothing:
    Note: Adds context menu item
    Placeholder

Process called "remove_context_menu_item" that takes item_id as String returns Nothing:
    Note: Removes context menu item
    Placeholder

Process called "create_cascading_menu" that takes parent_id as String, items as List[ContextMenuItem] returns Nothing:
    Note: Creates cascading menu
    Placeholder

Process called "set_context_menu_icon" that takes item_id as String, icon_path as String returns Nothing:
    Note: Sets menu icon
    Placeholder

Process called "register_shell_extension" that takes extension_dll as String returns Nothing:
    Note: Registers shell extension
    Placeholder

Note: =====================================================================
Note: PROTOCOL HANDLERS
Note: =====================================================================

Process called "register_protocol_handler" that takes handler as ProtocolHandler returns Nothing:
    Note: Registers protocol
    Placeholder

Process called "unregister_protocol_handler" that takes protocol as String returns Nothing:
    Note: Unregisters protocol
    Placeholder

Process called "set_default_protocol_handler" that takes protocol as String, prog_id as String returns Nothing:
    Note: Sets default handler
    Placeholder

Process called "check_protocol_handler" that takes protocol as String returns Optional[ProtocolHandler]:
    Note: Checks handler
    Placeholder

Note: =====================================================================
Note: SYSTEM TRAY
Note: =====================================================================

Process called "create_system_tray_icon" that takes icon as SystemTrayIcon returns String:
    Note: Creates tray icon
    Placeholder

Process called "update_tray_icon" that takes icon_id as String, updates as SystemTrayIcon returns Nothing:
    Note: Updates tray icon
    Placeholder

Process called "show_balloon_tip" that takes icon_id as String, tip as BalloonTip returns Nothing:
    Note: Shows balloon tip
    Placeholder

Process called "remove_tray_icon" that takes icon_id as String returns Nothing:
    Note: Removes tray icon
    Placeholder

Process called "set_tray_menu" that takes icon_id as String, menu as List[TrayMenuItem] returns Nothing:
    Note: Sets tray menu
    Placeholder

Note: =====================================================================
Note: MACOS DOCK
Note: =====================================================================

Process called "add_to_dock" that takes item as DockItem returns Nothing:
    Note: Adds to dock
    Placeholder

Process called "remove_from_dock" that takes app_path as String returns Nothing:
    Note: Removes from dock
    Placeholder

Process called "set_dock_position" that takes app_path as String, position as Integer returns Nothing:
    Note: Sets dock position
    Placeholder

Process called "set_dock_badge" that takes app_path as String, badge_text as String returns Nothing:
    Note: Sets dock badge
    Placeholder

Process called "bounce_dock_icon" that takes app_path as String, critical as Boolean returns Nothing:
    Note: Bounces dock icon
    Placeholder

Process called "add_dock_menu" that takes app_path as String, menu_items as List[DockMenuItem] returns Nothing:
    Note: Adds dock menu
    Placeholder

Note: =====================================================================
Note: QUICK LAUNCH
Note: =====================================================================

Process called "add_to_quick_launch" that takes shortcut as Shortcut returns Nothing:
    Note: Adds to quick launch
    Placeholder

Process called "remove_from_quick_launch" that takes shortcut_name as String returns Nothing:
    Note: Removes from quick launch
    Placeholder

Process called "get_quick_launch_path" that takes nothing returns String:
    Note: Gets quick launch path
    Placeholder

Process called "organize_quick_launch" that takes order as List[String] returns Nothing:
    Note: Organizes quick launch
    Placeholder

Note: =====================================================================
Note: SHORTCUT MANAGEMENT
Note: =====================================================================

Process called "update_shortcut" that takes shortcut_path as String, updates as Shortcut returns Nothing:
    Note: Updates shortcut
    Placeholder

Process called "repair_broken_shortcuts" that takes scan_path as String returns List[String]:
    Note: Repairs shortcuts
    Placeholder

Process called "find_shortcuts_to_target" that takes target_path as String returns List[String]:
    Note: Finds shortcuts
    Placeholder

Process called "backup_shortcuts" that takes backup_path as String returns Nothing:
    Note: Backs up shortcuts
    Placeholder

Process called "restore_shortcuts" that takes backup_path as String returns Nothing:
    Note: Restores shortcuts
    Placeholder

Note: =====================================================================
Note: UTILITIES
Note: =====================================================================

Process called "create_shortcut_from_template" that takes template_path as String, variables as Dictionary[String, String] returns Shortcut:
    Note: Creates from template
    Placeholder

Process called "validate_shortcut" that takes shortcut as Shortcut returns List[String]:
    Note: Validates shortcut
    Placeholder

Process called "export_shortcuts" that takes export_path as String, format as String returns Nothing:
    Note: Exports shortcuts
    Placeholder

Process called "import_shortcuts" that takes import_path as String returns List[Shortcut]:
    Note: Imports shortcuts
    Placeholder

Process called "clean_invalid_shortcuts" that takes nothing returns Integer:
    Note: Cleans invalid shortcuts
    Placeholder