Note:
runatime/io/filesystem/directory_operations.runa
Directory Operations

This module provides comprehensive directory operations including:
- Directory creation (single, nested, with permissions)
- Directory deletion (empty, recursive, safe deletion)
- Directory listing (files, subdirectories, recursive)
- Directory traversal and walking
- Directory copying and moving
- Directory metadata and attributes
- Directory permissions management
- Directory size calculation
- Directory comparison and synchronization
- Directory watching and monitoring
- Symbolic link handling
- Junction and mount point operations
- Directory compression and archiving
- Cross-platform directory operations
:End Note

Import "dev/debug/errors/core" as Errors

Note: =====================================================================
Note: DIRECTORY OPERATION DATA STRUCTURES
Note: =====================================================================

Type called "DirectoryInfo":
    directory_path as String
    name as String
    parent_path as String
    creation_time as String
    modification_time as String
    access_time as String
    permissions as String
    owner as String
    group as String
    is_hidden as Boolean
    is_system as Boolean
    is_readonly as Boolean
    total_size as Integer
    file_count as Integer
    subdirectory_count as Integer
    attributes as Dictionary[String, String]

Type called "DirectoryEntry":
    name as String
    full_path as String
    entry_type as String
    size as Integer
    modification_time as String
    permissions as String
    is_directory as Boolean
    is_file as Boolean
    is_symlink as Boolean
    symlink_target as String

Type called "DirectoryListOptions":
    include_hidden as Boolean
    include_system as Boolean
    recursive as Boolean
    max_depth as Integer
    follow_symlinks as Boolean
    filter_pattern as String
    sort_by as String
    sort_order as String
    limit as Integer
    offset as Integer

Type called "DirectoryCreateOptions":
    permissions as String
    create_parents as Boolean
    fail_if_exists as Boolean
    owner as String
    group as String
    inherit_permissions as Boolean

Type called "DirectoryDeleteOptions":
    recursive as Boolean
    force_delete as Boolean
    remove_readonly as Boolean
    secure_delete as Boolean
    move_to_trash as Boolean
    preserve_root as Boolean

Type called "DirectoryCopyOptions":
    recursive as Boolean
    overwrite_existing as Boolean
    preserve_metadata as Boolean
    preserve_permissions as Boolean
    follow_symlinks as Boolean
    exclude_patterns as List[String]
    include_patterns as List[String]
    verify_copy as Boolean
    progress_callback as String

Type called "DirectoryWalkResult":
    root_path as String
    current_path as String
    directories as List[String]
    files as List[String]
    symlinks as List[String]
    errors as List[Dictionary[String, String]]
    depth as Integer

Type called "DirectorySyncOptions":
    bidirectional as Boolean
    delete_orphans as Boolean
    preserve_newer as Boolean
    exclude_patterns as List[String]
    include_patterns as List[String]
    dry_run as Boolean
    verify_sync as Boolean

Note: =====================================================================
Note: BASIC DIRECTORY OPERATIONS
Note: =====================================================================

Process called "create_directory" that takes directory_path as String, options as DirectoryCreateOptions returns Boolean:
    Note: Create a single directory with options
    Note: TODO: Implement directory creation
    Throw Errors.NotImplemented with "Directory creation not yet implemented"

Process called "create_directories" that takes directory_path as String, options as DirectoryCreateOptions returns Boolean:
    Note: Create nested directories (mkdir -p equivalent)
    Note: TODO: Implement nested directory creation
    Throw Errors.NotImplemented with "Nested directory creation not yet implemented"

Process called "delete_directory" that takes directory_path as String, options as DirectoryDeleteOptions returns Boolean:
    Note: Delete directory with specified options
    Note: TODO: Implement directory deletion
    Throw Errors.NotImplemented with "Directory deletion not yet implemented"

Process called "rename_directory" that takes old_path as String, new_path as String, overwrite as Boolean returns Boolean:
    Note: Rename or move directory
    Note: TODO: Implement directory renaming
    Throw Errors.NotImplemented with "Directory renaming not yet implemented"

Process called "copy_directory" that takes source_path as String, destination_path as String, options as DirectoryCopyOptions returns Boolean:
    Note: Copy directory with all contents
    Note: TODO: Implement directory copying
    Throw Errors.NotImplemented with "Directory copying not yet implemented"

Note: =====================================================================
Note: DIRECTORY LISTING OPERATIONS
Note: =====================================================================

Process called "list_directory" that takes directory_path as String, options as DirectoryListOptions returns List[DirectoryEntry]:
    Note: List directory contents with filtering
    Note: TODO: Implement directory listing
    Throw Errors.NotImplemented with "Directory listing not yet implemented"

Process called "list_files" that takes directory_path as String, pattern as String, recursive as Boolean returns List[String]:
    Note: List only files in directory
    Note: TODO: Implement file listing
    Throw Errors.NotImplemented with "File listing not yet implemented"

Process called "list_subdirectories" that takes directory_path as String, recursive as Boolean returns List[String]:
    Note: List only subdirectories
    Note: TODO: Implement subdirectory listing
    Throw Errors.NotImplemented with "Subdirectory listing not yet implemented"

Process called "glob_directory" that takes directory_path as String, pattern as String, recursive as Boolean returns List[String]:
    Note: Find entries matching glob pattern
    Note: TODO: Implement glob pattern matching
    Throw Errors.NotImplemented with "Glob pattern matching not yet implemented"

Process called "find_in_directory" that takes directory_path as String, name_pattern as String, content_pattern as String, options as DirectoryListOptions returns List[DirectoryEntry]:
    Note: Find files by name and content patterns
    Note: TODO: Implement directory searching
    Throw Errors.NotImplemented with "Directory searching not yet implemented"

Note: =====================================================================
Note: DIRECTORY TRAVERSAL OPERATIONS
Note: =====================================================================

Process called "walk_directory" that takes directory_path as String, callback as String, options as DirectoryListOptions returns Boolean:
    Note: Walk directory tree with callback for each entry
    Note: TODO: Implement directory walking
    Throw Errors.NotImplemented with "Directory walking not yet implemented"

Process called "walk_directory_generator" that takes directory_path as String, options as DirectoryListOptions returns List[DirectoryWalkResult]:
    Note: Generate directory walk results iteratively
    Note: TODO: Implement directory walk generator
    Throw Errors.NotImplemented with "Directory walk generator not yet implemented"

Process called "traverse_directory_breadth_first" that takes directory_path as String, visitor_callback as String returns Boolean:
    Note: Traverse directory tree breadth-first
    Note: TODO: Implement breadth-first traversal
    Throw Errors.NotImplemented with "Breadth-first traversal not yet implemented"

Process called "traverse_directory_depth_first" that takes directory_path as String, visitor_callback as String returns Boolean:
    Note: Traverse directory tree depth-first
    Note: TODO: Implement depth-first traversal
    Throw Errors.NotImplemented with "Depth-first traversal not yet implemented"

Note: =====================================================================
Note: DIRECTORY METADATA OPERATIONS
Note: =====================================================================

Process called "get_directory_info" that takes directory_path as String returns DirectoryInfo:
    Note: Get comprehensive directory information
    Note: TODO: Implement directory info retrieval
    Throw Errors.NotImplemented with "Directory info retrieval not yet implemented"

Process called "get_directory_size" that takes directory_path as String, include_subdirs as Boolean returns Integer:
    Note: Calculate total directory size
    Note: TODO: Implement directory size calculation
    Throw Errors.NotImplemented with "Directory size calculation not yet implemented"

Process called "get_directory_permissions" that takes directory_path as String returns String:
    Note: Get directory permissions
    Note: TODO: Implement permission retrieval
    Throw Errors.NotImplemented with "Directory permission retrieval not yet implemented"

Process called "set_directory_permissions" that takes directory_path as String, permissions as String, recursive as Boolean returns Boolean:
    Note: Set directory permissions
    Note: TODO: Implement permission setting
    Throw Errors.NotImplemented with "Directory permission setting not yet implemented"

Process called "get_directory_attributes" that takes directory_path as String returns Dictionary[String, String]:
    Note: Get extended directory attributes
    Note: TODO: Implement attribute retrieval
    Throw Errors.NotImplemented with "Directory attribute retrieval not yet implemented"

Process called "set_directory_attributes" that takes directory_path as String, attributes as Dictionary[String, String] returns Boolean:
    Note: Set extended directory attributes
    Note: TODO: Implement attribute setting
    Throw Errors.NotImplemented with "Directory attribute setting not yet implemented"

Note: =====================================================================
Note: DIRECTORY COMPARISON OPERATIONS
Note: =====================================================================

Process called "compare_directories" that takes dir1_path as String, dir2_path as String, compare_content as Boolean returns Dictionary[String, List[String]]:
    Note: Compare two directories for differences
    Note: TODO: Implement directory comparison
    Throw Errors.NotImplemented with "Directory comparison not yet implemented"

Process called "sync_directories" that takes source_path as String, destination_path as String, options as DirectorySyncOptions returns Dictionary[String, Integer]:
    Note: Synchronize two directories
    Note: TODO: Implement directory synchronization
    Throw Errors.NotImplemented with "Directory synchronization not yet implemented"

Process called "mirror_directory" that takes source_path as String, destination_path as String, delete_extra as Boolean returns Boolean:
    Note: Mirror source directory to destination
    Note: TODO: Implement directory mirroring
    Throw Errors.NotImplemented with "Directory mirroring not yet implemented"

Note: =====================================================================
Note: DIRECTORY ARCHIVING OPERATIONS
Note: =====================================================================

Process called "archive_directory" that takes directory_path as String, archive_path as String, format as String, compression_level as Integer returns Boolean:
    Note: Create archive from directory
    Note: TODO: Implement directory archiving
    Throw Errors.NotImplemented with "Directory archiving not yet implemented"

Process called "extract_archive_to_directory" that takes archive_path as String, directory_path as String, preserve_structure as Boolean returns Boolean:
    Note: Extract archive to directory
    Note: TODO: Implement archive extraction
    Throw Errors.NotImplemented with "Archive extraction not yet implemented"

Process called "compress_directory" that takes directory_path as String, output_path as String, algorithm as String returns Boolean:
    Note: Compress entire directory
    Note: TODO: Implement directory compression
    Throw Errors.NotImplemented with "Directory compression not yet implemented"

Note: =====================================================================
Note: SYMBOLIC LINK OPERATIONS
Note: =====================================================================

Process called "create_directory_symlink" that takes link_path as String, target_path as String returns Boolean:
    Note: Create symbolic link to directory
    Note: TODO: Implement symlink creation
    Throw Errors.NotImplemented with "Directory symlink creation not yet implemented"

Process called "resolve_directory_symlink" that takes symlink_path as String returns String:
    Note: Resolve symbolic link to actual directory
    Note: TODO: Implement symlink resolution
    Throw Errors.NotImplemented with "Directory symlink resolution not yet implemented"

Process called "is_directory_symlink" that takes directory_path as String returns Boolean:
    Note: Check if directory is a symbolic link
    Note: TODO: Implement symlink checking
    Throw Errors.NotImplemented with "Directory symlink checking not yet implemented"

Process called "create_directory_junction" that takes junction_path as String, target_path as String returns Boolean:
    Note: Create directory junction (Windows)
    Note: TODO: Implement junction creation
    Throw Errors.NotImplemented with "Directory junction creation not yet implemented"

Note: =====================================================================
Note: DIRECTORY MONITORING OPERATIONS
Note: =====================================================================

Process called "watch_directory_changes" that takes directory_path as String, event_types as List[String], callback as String returns String:
    Note: Monitor directory for changes
    Note: TODO: Implement directory watching
    Throw Errors.NotImplemented with "Directory watching not yet implemented"

Process called "poll_directory_changes" that takes directory_path as String, last_check_time as String returns List[Dictionary[String, String]]:
    Note: Poll directory for changes since last check
    Note: TODO: Implement directory polling
    Throw Errors.NotImplemented with "Directory polling not yet implemented"

Process called "get_directory_change_events" that takes watcher_id as String, timeout_ms as Integer returns List[Dictionary[String, String]]:
    Note: Get pending change events from watcher
    Note: TODO: Implement event retrieval
    Throw Errors.NotImplemented with "Directory event retrieval not yet implemented"

Process called "stop_watching_directory" that takes watcher_id as String returns Boolean:
    Note: Stop monitoring directory changes
    Note: TODO: Implement watch stopping
    Throw Errors.NotImplemented with "Directory watch stopping not yet implemented"

Note: =====================================================================
Note: DIRECTORY UTILITY OPERATIONS
Note: =====================================================================

Process called "directory_exists" that takes directory_path as String returns Boolean:
    Note: Check if directory exists
    Note: TODO: Implement existence check
    Throw Errors.NotImplemented with "Directory existence check not yet implemented"

Process called "is_directory" that takes path as String returns Boolean:
    Note: Check if path is a directory
    Note: TODO: Implement directory type check
    Throw Errors.NotImplemented with "Directory type check not yet implemented"

Process called "is_directory_empty" that takes directory_path as String returns Boolean:
    Note: Check if directory is empty
    Note: TODO: Implement empty check
    Throw Errors.NotImplemented with "Directory empty check not yet implemented"

Process called "is_directory_readable" that takes directory_path as String returns Boolean:
    Note: Check if directory is readable
    Note: TODO: Implement readability check
    Throw Errors.NotImplemented with "Directory readability check not yet implemented"

Process called "is_directory_writable" that takes directory_path as String returns Boolean:
    Note: Check if directory is writable
    Note: TODO: Implement writability check
    Throw Errors.NotImplemented with "Directory writability check not yet implemented"

Process called "get_directory_mount_point" that takes directory_path as String returns String:
    Note: Get mount point of directory
    Note: TODO: Implement mount point retrieval
    Throw Errors.NotImplemented with "Mount point retrieval not yet implemented"

Process called "get_directory_free_space" that takes directory_path as String returns Integer:
    Note: Get free space available in directory's volume
    Note: TODO: Implement free space calculation
    Throw Errors.NotImplemented with "Free space calculation not yet implemented"

Process called "clean_empty_directories" that takes root_path as String, dry_run as Boolean returns List[String]:
    Note: Remove empty directories recursively
    Note: TODO: Implement empty directory cleaning
    Throw Errors.NotImplemented with "Empty directory cleaning not yet implemented"