Note:
Formatter Configuration Utilities
:End Note

Import "../cli/main.runa" as CLI

Type called "FormatterConfig":
    operator_style as String

Process called "read_config" that takes project_root as Optional[String] returns FormatterConfig:
    Let cfg be CLI.load_project_config(project_root)
    Let formatting as Dictionary[String, Any]
    If cfg has key "formatting":
        Set formatting to cfg at key "formatting"
    Otherwise:
        Set formatting to dictionary containing
    
    Let style be "natural"
    If formatting has key "operator_style":
        Set style to formatting at key "operator_style"
    
    Return FormatterConfig with:
        operator_style as style


